{"version":3,"sources":["constants/index.js","reducers/index.js","reducers/productReducers.js","reducers/cardReducers.js","reducers/userReducers.js","store.js","actions/productActions.js","components/Message.js","components/Product.js","pages/ProductsListPage.js","pages/ProductDetailsPage.js","actions/cardActions.js","components/DeleteCardComponent.js","components/CreateCardComponent.js","actions/userActions.js","components/ChargeCardComponent.js","components/UserAddressComponent.js","pages/CheckoutPage.js","components/SearchBarForProducts.js","components/Navbar.js","components/PaymentStatus.js","pages/LoginPage.js","pages/RegisterPage.js","pages/CardUpdatePage.js","pages/CardDetailsPage.js","pages/AccountPage.js","pages/AccountUpdatePage.js","pages/DeleteUserAccountPage.js","components/CreateAddressComponent.js","pages/AllAddressesOfUserPage.js","pages/AddressUpdatePage.js","components/GetDate.js","components/SearchBarForOrdersPage.js","pages/OrdersListPage.js","pages/ProductCreatePage.js","pages/ProductUpdatePage.js","pages/NotFoundPage.js","App.js","index.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","CREATE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CHECK_TOKEN_VALID_RESET","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CHARGE_CARD_REQUEST","CHARGE_CARD_SUCCESS","CHARGE_CARD_FAIL","CHARGE_CARD_RESET","SAVED_CARDS_LIST_REQUEST","SAVED_CARDS_LIST_SUCCESS","SAVED_CARDS_LIST_FAIL","DELETE_SAVED_CARD_REQUEST","DELETE_SAVED_CARD_SUCCESS","DELETE_SAVED_CARD_FAIL","UPDATE_STRIPE_CARD_REQUEST","UPDATE_STRIPE_CARD_SUCCESS","UPDATE_STRIPE_CARD_FAIL","UPDATE_STRIPE_CARD_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","CHANGE_DELIVERY_STATUS_REQUEST","CHANGE_DELIVERY_STATUS_SUCCESS","CHANGE_DELIVERY_STATUS_FAIL","CHANGE_DELIVERY_STATUS_RESET","allReducers","combineReducers","productsListReducer","state","products","action","type","loading","error","payload","productDetailsReducer","product","createProductReducer","success","updateProductReducer","deleteProductReducer","createCardReducer","cardData","chargeCardReducer","savedCardsListReducer","stripeCards","updateStripeCardtReducer","stripeCard","deleteSavedCardReducer","data","userLoginReducer","userInfo","userRegisterReducer","getSingleAddressReducer","address","getAllAddressesOfUserReducer","addresses","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders","changeDeliveryStatusReducer","checkTokenValidationReducer","valid","userDetailsReducer","user","userDetailsUpdateReducer","deleteUserAccountReducer","middleware","thunk","initialState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","getProductDetails","id","dispatch","a","axios","get","message","Message","variant","children","Alert","Product","Card","className","Body","to","Img","src","image","height","Title","as","name","Text","price","ProductsListPage","searchTerm","useHistory","location","search","useDispatch","useSelector","useEffect","style","display","Spinner","animation","textAlign","alt","value","Row","filter","item","toLowerCase","includes","split","length","map","idx","Col","sm","md","lg","xl","ProductDetailsPage","history","match","useState","show","setShow","handleClose","productDeletionSuccess","params","confirmDelete","getState","config","headers","Authorization","token","delete","response","detail","alert","push","Modal","onHide","Header","closeButton","color","Footer","Button","onClick","Container","admin","width","description","justifyContent","border","borderColor","padding","stock","createCard","cardNumber","post","email","expMonth","expYear","cvc","saveCard","savedCardsList","DeleteCardComponent","userId","deleteCardNumber","runCardDeleteHandler","toggleRunCardDeleteHandler","c_number","card_number","current_year","Date","getFullYear","CreateCardComponent","addressSelected","setRunCardDeleteHandler","differentCard","setDifferentCard","cardDetails","setCardDetails","cardDetailsId","setCardDetailsId","showStripeCard","setShowStripeCard","setEmail","setCardNumber","setExpMonth","setExpYear","setCvc","setSaveCard","showCardDetails","float","position","exp_month","exp_year","window","reload","Form","onSubmit","e","preventDefault","Number","Group","Label","Control","autoFocus","pattern","onChange","target","placeholder","maxLength","required","defaultValue","Array","from","x","i","hidden","slice","payWithSavedCard","title","logout","removeItem","checkTokenValidation","details","userDetails","getAllAddress","getSingleAddress","getAllOrders","ChargeCardComponent","selectedAddressId","chargeSuccessfull","chargeError","chargingStatus","pathname","card_data","last4","address_detail","house_no","landmark","city","pin_code","chargeCustomer","disabled","size","role","aria-hidden","phone_number","UserAddressComponent","handleAddressId","CheckoutPage","setAddressSelected","setSelectedAddressId","tokenError","cardCreationError","cardCreationLoading","xs","Image","SearchBarForProducts","setSearchTerm","logo","flexBasis","margin","fontWeight","fontSize","NavBar","Navbar","bg","expand","collapseOnSelect","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","username","Item","borderTop","borderBottom","borderLeft","paddingTop","paddingBottom","backgroundColor","backgroundImage","backgroundSize","backgroundRepeat","opacity","data-ride","data-target","data-slide-to","wordWrap","data-slide","PaymentStatus","useLocation","boughtData","renderData","LoginPage","setUsername","password","setPassword","setItem","stringify","login","controlId","RegisterPage","confirmPassword","setConfirmPassword","setMessage","register","CardUpdatePage","setName","addressCity","setAddressCity","addressCountry","setAddressCountry","addressState","setAddressState","addressZip","setAddressZip","customerId","setCustomerId","cardId","setCardId","customer_id","card_id","name_on_card","address_city","address_country","address_state","address_zip","marginBottom","each","cus_Id","card_Id","c_num","CardDetailsPage","setUserId","setDeleteCardNumber","alignItems","AccountPage","userAccDetails","logoutHandler","AccountUpdatePage","updatedUsername","updatedEmail","userData","put","userUpdateDetails","DeleteUserAccount","myPassword","setMyPassword","userAccountDelete","CreateAddressComponent","toggleCreateAddress","phoneNumber","setPhoneNumber","pinCode","setPinCode","houseNumber","setHouseNumber","setLandmark","setCity","setState","addressCreationSuccess","errorCreatingAddress","addressData","createUserAddress","InputGroup","AllAddressesOfUserPage","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","loadingAllAddresses","addressDeletionSuccess","deleteAddressHandler","deleteUserAddress","AddressUpdatePage","errorFetchingAddress","addressUpdateSuccess","updatedAddress","dateCheck","param","dateValue","monthValue","yearValue","SearchBarForOrdersPage","handleSearchTerm","placeholderValue","OrdersListPage","todays_date","toISOString","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","loadingOrders","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","changeDeliveryStatusHandler","status","changeDeliveryStatus","term","Table","striped","bordered","ordered_item","order","paid_status","paid_at","total_price","is_delivered","delivered_at","ProductCreatePage","setDescription","setPrice","setStock","setImage","productCreationSuccess","productCreationError","form_data","FormData","append","createProduct","step","files","ProductUpdatePage","loadingPageDetails","newImage","setNewImage","productUpdationSuccess","loadingProductUpdations","productUpdationError","scrollTo","top","behavior","productId","updateProduct","defaultChecked","NotFoundPage","App","path","component","ProductListPage","exact","Login","Register","DeleteUserAccountPage","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebeeee83.chunk.js","sourcesContent":["// products list\r\nexport const PRODUCTS_LIST_REQUEST = \"PRODUCTS_LIST_REQUEST\" \r\nexport const PRODUCTS_LIST_SUCCESS = \"PRODUCTS_LIST_SUCCESS\"\r\nexport const PRODUCTS_LIST_FAIL = \"PRODUCTS_LIST_FAIL\"\r\n\r\n// product details\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\" \r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\n\r\n// create product\r\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\" \r\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\" \r\nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\" \r\nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\" \r\n\r\n// update product\r\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\" \r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\" \r\nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\" \r\nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\" \r\n\r\n// delete product\r\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\" \r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\" \r\nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\" \r\nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\" \r\n\r\n// check token validation\r\nexport const CHECK_TOKEN_VALID_REQUEST = \"CHECK_TOKEN_VALID_REQUEST\"\r\nexport const CHECK_TOKEN_VALID_SUCCESS = \"CHECK_TOKEN_VALID_SUCCESS\"\r\nexport const CHECK_TOKEN_VALID_FAIL = \"CHECK_TOKEN_VALID_FAIL\"\r\nexport const CHECK_TOKEN_VALID_RESET = \"CHECK_TOKEN_VALID_RESET\"\r\n\r\n// create card\r\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\" \r\nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\"\r\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\"\r\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\"\r\n\r\n// charge card\r\nexport const CHARGE_CARD_REQUEST = \"CHARGE_CARD_REQUEST\" \r\nexport const CHARGE_CARD_SUCCESS = \"CHARGE_CARD_SUCCESS\"\r\nexport const CHARGE_CARD_FAIL = \"CHARGE_CARD_FAIL\"\r\nexport const CHARGE_CARD_RESET = \"CHARGE_CARD_RESET\"\r\n\r\n// saved cards list\r\nexport const SAVED_CARDS_LIST_REQUEST = \"SAVED_CARDS_LIST_REQUEST\"\r\nexport const SAVED_CARDS_LIST_SUCCESS = \"SAVED_CARDS_LIST_SUCCESS\"\r\nexport const SAVED_CARDS_LIST_FAIL = \"SAVED_CARDS_LIST_FAIL\"\r\n\r\n// delete saved card\r\nexport const DELETE_SAVED_CARD_REQUEST = \"DELETE_SAVED_CARD_REQUEST\"\r\nexport const DELETE_SAVED_CARD_SUCCESS = \"DELETE_SAVED_CARD_SUCCESS\"\r\nexport const DELETE_SAVED_CARD_FAIL = \"DELETE_SAVED_CARD_FAIL\"\r\n\r\n// update saved card\r\nexport const UPDATE_STRIPE_CARD_REQUEST = \"UPDATE_STRIPE_CARD_REQUEST\"\r\nexport const UPDATE_STRIPE_CARD_SUCCESS = \"UPDATE_STRIPE_CARD_SUCCESS\"\r\nexport const UPDATE_STRIPE_CARD_FAIL = \"UPDATE_STRIPE_CARD_FAIL\"\r\nexport const UPDATE_STRIPE_CARD_RESET = \"UPDATE_STRIPE_CARD_RESET\"\r\n\r\n// user login/logout\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\n// user registration/signup\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\n// user info/details\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\n\r\n// user update details\r\nexport const UPDATE_USER_DETAILS_REQUEST = \"UPDATE_USER_DETAILS_REQUEST\"\r\nexport const UPDATE_USER_DETAILS_SUCCESS = \"UPDATE_USER_DETAILS_SUCCESS\"\r\nexport const UPDATE_USER_DETAILS_FAIL = \"UPDATE_USER_DETAILS_FAIL\"\r\nexport const UPDATE_USER_DETAILS_RESET = \"UPDATE_USER_DETAILS_RESET\"\r\n\r\n// delete user account\r\nexport const DELETE_USER_ACCOUNT_REQUEST = \"DELETE_USER_ACCOUNT_REQUEST\" \r\nexport const DELETE_USER_ACCOUNT_SUCCESS = \"DELETE_USER_ACCOUNT_SUCCESS\" \r\nexport const DELETE_USER_ACCOUNT_FAIL = \"DELETE_USER_ACCOUNT_FAIL\" \r\nexport const DELETE_USER_ACCOUNT_RESET = \"DELETE_USER_ACCOUNT_RESET\" \r\n\r\n// user all address\r\nexport const GET_USER_ALL_ADDRESSES_REQUEST = \"GET_USER_ALL_ADDRESSES_REQUEST\"\r\nexport const GET_USER_ALL_ADDRESSES_SUCCESS = \"GET_USER_ALL_ADDRESSES_SUCCESS\"\r\nexport const GET_USER_ALL_ADDRESSES_FAIL = \"GET_USER_ALL_ADDRESSES_FAIL\"\r\n\r\n// user single address details\r\nexport const GET_SINGLE_ADDRESS_REQUEST = \"GET_SINGLE_ADDRESS_REQUEST\"\r\nexport const GET_SINGLE_ADDRESS_SUCCESS = \"GET_SINGLE_ADDRESS_SUCCESS\"\r\nexport const GET_SINGLE_ADDRESS_FAIL = \"GET_SINGLE_ADDRESS_FAIL\"\r\nexport const GET_SINGLE_ADDRESS_RESET = \"GET_SINGLE_ADDRESS_RESET\"\r\n\r\n// create address\r\nexport const CREATE_USER_ADDRESS_REQUEST = \"CREATE_USER_ADDRESS_REQUEST\"\r\nexport const CREATE_USER_ADDRESS_SUCCESS = \"CREATE_USER_ADDRESS_SUCCESS\"\r\nexport const CREATE_USER_ADDRESS_FAIL = \"CREATE_USER_ADDRESS_FAIL\"\r\nexport const CREATE_USER_ADDRESS_RESET = \"CREATE_USER_ADDRESS_RESET\"\r\n\r\n// update address\r\nexport const UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\"\r\nexport const UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\"\r\nexport const UPDATE_USER_ADDRESS_FAIL = \"UPDATE_USER_ADDRESS_FAIL\"\r\nexport const UPDATE_USER_ADDRESS_RESET = \"UPDATE_USER_ADDRESS_RESET\"\r\n\r\n// delete user address\r\nexport const DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\"\r\nexport const DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\"\r\nexport const DELETE_USER_ADDRESS_FAIL = \"DELETE_USER_ADDRESS_FAIL\"\r\nexport const DELETE_USER_ADDRESS_RESET = \"DELETE_USER_ADDRESS_RESET\"\r\n\r\n// all orders list\r\nexport const GET_ALL_ORDERS_REQUEST = \"GET_ALL_ORDERS_REQUEST\"\r\nexport const GET_ALL_ORDERS_SUCCESS = \"GET_ALL_ORDERS_SUCCESS\"\r\nexport const GET_ALL_ORDERS_FAIL = \"GET_ALL_ORDERS_FAIL\"\r\n\r\n// change order delivery status\r\nexport const CHANGE_DELIVERY_STATUS_REQUEST = \"CHANGE_DELIVERY_STATUS_REQUEST\"\r\nexport const CHANGE_DELIVERY_STATUS_SUCCESS = \"CHANGE_DELIVERY_STATUS_SUCCESS\"\r\nexport const CHANGE_DELIVERY_STATUS_FAIL = \"CHANGE_DELIVERY_STATUS_FAIL\"\r\nexport const CHANGE_DELIVERY_STATUS_RESET = \"CHANGE_DELIVERY_STATUS_RESET\"","import { combineReducers } from \"redux\";\r\nimport {\r\n    productsListReducer,\r\n    productDetailsReducer,\r\n    createProductReducer,\r\n    updateProductReducer,\r\n    deleteProductReducer,\r\n    changeDeliveryStatusReducer,\r\n} from \"./productReducers\";\r\n\r\nimport {\r\n    createCardReducer,\r\n    chargeCardReducer,\r\n    savedCardsListReducer,\r\n    deleteSavedCardReducer,\r\n    updateStripeCardtReducer\r\n} from \"./cardReducers\";\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userDetailsUpdateReducer,\r\n    deleteUserAccountReducer,\r\n    checkTokenValidationReducer,\r\n    getSingleAddressReducer,\r\n    getAllAddressesOfUserReducer,\r\n    createUserAddressReducer,\r\n    updateUserAddressReducer,\r\n    deleteUserAddressReducer,\r\n    getAllOrdersReducer,\r\n} from \"./userReducers\";\r\n\r\nconst allReducers = combineReducers({\r\n    productsListReducer,\r\n    productDetailsReducer,\r\n    createProductReducer,\r\n    updateProductReducer,\r\n    deleteProductReducer,\r\n    createCardReducer,\r\n    chargeCardReducer,\r\n    savedCardsListReducer,\r\n    updateStripeCardtReducer,\r\n    deleteSavedCardReducer,\r\n    userLoginReducer,\r\n    userRegisterReducer,    \r\n    getSingleAddressReducer,\r\n    getAllAddressesOfUserReducer,\r\n    createUserAddressReducer,\r\n    updateUserAddressReducer,\r\n    deleteUserAddressReducer,\r\n    getAllOrdersReducer,\r\n    changeDeliveryStatusReducer,\r\n    checkTokenValidationReducer,\r\n    userDetailsReducer,\r\n    userDetailsUpdateReducer,\r\n    deleteUserAccountReducer,\r\n})\r\n\r\n\r\nexport default allReducers","import {\r\n    PRODUCTS_LIST_REQUEST,\r\n    PRODUCTS_LIST_SUCCESS,\r\n    PRODUCTS_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    CREATE_PRODUCT_REQUEST,\r\n    CREATE_PRODUCT_SUCCESS,\r\n    CREATE_PRODUCT_FAIL,\r\n    CREATE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_RESET,\r\n\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_RESET,\r\n\r\n    CHANGE_DELIVERY_STATUS_REQUEST,\r\n    CHANGE_DELIVERY_STATUS_SUCCESS,\r\n    CHANGE_DELIVERY_STATUS_FAIL,\r\n    CHANGE_DELIVERY_STATUS_RESET,\r\n\r\n\r\n} from '../constants/index'\r\n\r\n\r\n// products list\r\nexport const productsListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCTS_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                products: [],   // always pass the object during the request\r\n                error: \"\"\r\n            }\r\n        case PRODUCTS_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload,\r\n                error: \"\"\r\n            }\r\n        case PRODUCTS_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// product details\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                product: {},        // always pass the object during the request\r\n                error: \"\"\r\n            }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                product: action.payload,\r\n                error: \"\"\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// create product reducer\r\nexport const createProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case CREATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                product: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case CREATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                product: action.payload,\r\n                error: \"\"\r\n            }\r\n        case CREATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                product: {},\r\n                error: action.payload\r\n            }\r\n        case CREATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                product: {},\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// update product reducer\r\nexport const updateProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                product: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                product: action.payload,\r\n                error: \"\"\r\n            }\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                product: {},\r\n                error: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                product: {},\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// delete product reducer\r\nexport const deleteProductReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case DELETE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// change order delivery status reducer\r\nexport const changeDeliveryStatusReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_DELIVERY_STATUS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case CHANGE_DELIVERY_STATUS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case CHANGE_DELIVERY_STATUS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case CHANGE_DELIVERY_STATUS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CARD_CREATE_REQUEST,\r\n    CARD_CREATE_SUCCESS,\r\n    CARD_CREATE_FAIL,\r\n    CARD_CREATE_RESET,\r\n\r\n    CHARGE_CARD_REQUEST,\r\n    CHARGE_CARD_SUCCESS,\r\n    CHARGE_CARD_FAIL,\r\n    CHARGE_CARD_RESET,\r\n\r\n    SAVED_CARDS_LIST_REQUEST,\r\n    SAVED_CARDS_LIST_SUCCESS,\r\n    SAVED_CARDS_LIST_FAIL,\r\n\r\n    UPDATE_STRIPE_CARD_REQUEST,\r\n    UPDATE_STRIPE_CARD_SUCCESS,\r\n    UPDATE_STRIPE_CARD_FAIL,\r\n    UPDATE_STRIPE_CARD_RESET,\r\n\r\n    DELETE_SAVED_CARD_REQUEST,\r\n    DELETE_SAVED_CARD_SUCCESS,\r\n    DELETE_SAVED_CARD_FAIL,\r\n\r\n} from '../constants/index'\r\n\r\n\r\n// create card reducer\r\nexport const createCardReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CARD_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                cardData: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case CARD_CREATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                cardData: action.payload,\r\n                error: \"\"\r\n            }\r\n        case CARD_CREATE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                cardData: {},\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case CARD_CREATE_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                cardData: {},\r\n                error: \"\",\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// charge card reducer\r\nexport const chargeCardReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CHARGE_CARD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case CHARGE_CARD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case CHARGE_CARD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case CHARGE_CARD_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// saved cards list reducer\r\nexport const savedCardsListReducer = (state = {stripeCards: []}, action) => {\r\n    switch (action.type) {\r\n        case SAVED_CARDS_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case SAVED_CARDS_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                stripeCards: action.payload,\r\n                error: \"\"\r\n            }\r\n        case SAVED_CARDS_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// update stripe card reducer\r\nexport const updateStripeCardtReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_STRIPE_CARD_REQUEST:\r\n            return {\r\n                loading: true,\r\n                success: false,\r\n                stripeCard: {},\r\n                error: \"\",\r\n            }\r\n        case UPDATE_STRIPE_CARD_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                stripeCard: action.payload,\r\n                error: \"\",\r\n            }\r\n        case UPDATE_STRIPE_CARD_FAIL:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                stripeCard: {},\r\n                error: action.payload\r\n            }\r\n        case UPDATE_STRIPE_CARD_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                stripeCard: {},\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// delete saved card reducer\r\nexport const deleteSavedCardReducer = (state = {data: {}}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_SAVED_CARD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: \"\"\r\n            }\r\n        case DELETE_SAVED_CARD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                data: action.payload,\r\n                error: \"\"\r\n            }\r\n        case DELETE_SAVED_CARD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAILS_REQUEST,\r\n    UPDATE_USER_DETAILS_SUCCESS,\r\n    UPDATE_USER_DETAILS_FAIL,\r\n    UPDATE_USER_DETAILS_RESET,\r\n\r\n    DELETE_USER_ACCOUNT_REQUEST,\r\n    DELETE_USER_ACCOUNT_SUCCESS,\r\n    DELETE_USER_ACCOUNT_FAIL,\r\n    DELETE_USER_ACCOUNT_RESET,\r\n\r\n    GET_USER_ALL_ADDRESSES_REQUEST,\r\n    GET_USER_ALL_ADDRESSES_SUCCESS,\r\n    GET_USER_ALL_ADDRESSES_FAIL,\r\n\r\n    GET_SINGLE_ADDRESS_REQUEST,\r\n    GET_SINGLE_ADDRESS_SUCCESS,\r\n    GET_SINGLE_ADDRESS_FAIL,\r\n    GET_SINGLE_ADDRESS_RESET,\r\n\r\n    CREATE_USER_ADDRESS_REQUEST,\r\n    CREATE_USER_ADDRESS_SUCCESS,\r\n    CREATE_USER_ADDRESS_FAIL,\r\n    CREATE_USER_ADDRESS_RESET,\r\n\r\n    UPDATE_USER_ADDRESS_REQUEST,\r\n    UPDATE_USER_ADDRESS_SUCCESS,\r\n    UPDATE_USER_ADDRESS_FAIL,\r\n    UPDATE_USER_ADDRESS_RESET,\r\n\r\n    DELETE_USER_ADDRESS_REQUEST,\r\n    DELETE_USER_ADDRESS_SUCCESS,\r\n    DELETE_USER_ADDRESS_FAIL,\r\n    DELETE_USER_ADDRESS_RESET,\r\n\r\n    CHECK_TOKEN_VALID_REQUEST,\r\n    CHECK_TOKEN_VALID_SUCCESS,\r\n    CHECK_TOKEN_VALID_FAIL,\r\n    CHECK_TOKEN_VALID_RESET,\r\n\r\n    GET_ALL_ORDERS_REQUEST,\r\n    GET_ALL_ORDERS_SUCCESS,\r\n    GET_ALL_ORDERS_FAIL,\r\n\r\n} from '../constants/index'\r\n\r\n\r\n// Login\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Register\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// user details reducer\r\nexport const userDetailsReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                user: {},\r\n                error: \"\"\r\n            }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                user: action.payload,\r\n                error: \"\"\r\n            }\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: {},\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// user details update reducer\r\nexport const userDetailsUpdateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                user: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case UPDATE_USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                success: true,\r\n                user: action.payload,\r\n                error: \"\"\r\n            }\r\n        case UPDATE_USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                user: {},\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAILS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                user: {},\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// delete user account reducer\r\nexport const deleteUserAccountReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_ACCOUNT_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case DELETE_USER_ACCOUNT_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case DELETE_USER_ACCOUNT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_USER_ACCOUNT_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// check token validation reducer\r\nexport const checkTokenValidationReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case CHECK_TOKEN_VALID_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                valid: false,\r\n                error: \"\"\r\n            }\r\n        case CHECK_TOKEN_VALID_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                valid: true,\r\n                error: \"\"\r\n            }\r\n        case CHECK_TOKEN_VALID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                valid: false,\r\n                error: action.payload\r\n            }\r\n        case CHECK_TOKEN_VALID_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                valid: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n// get all addresses of user reducer\r\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_ALL_ADDRESSES_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                addresses: [],\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                addresses: action.payload,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case GET_USER_ALL_ADDRESSES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                addresses: [],\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// get single address reducer\r\nexport const getSingleAddressReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_ADDRESS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                address: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case GET_SINGLE_ADDRESS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                address: action.payload,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case GET_SINGLE_ADDRESS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                address: {},\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case GET_SINGLE_ADDRESS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                address: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// create user address\r\nexport const createUserAddressReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case CREATE_USER_ADDRESS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                address: {},\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case CREATE_USER_ADDRESS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                address: action.payload,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case CREATE_USER_ADDRESS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                address: {},\r\n                error: action.payload\r\n            }\r\n        case CREATE_USER_ADDRESS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                address: {},\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// update user address\r\nexport const updateUserAddressReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_ADDRESS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case UPDATE_USER_ADDRESS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case UPDATE_USER_ADDRESS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_ADDRESS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// delete user address reducer\r\nexport const deleteUserAddressReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_ADDRESS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        case DELETE_USER_ADDRESS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                success: true,\r\n                error: \"\"\r\n            }\r\n        case DELETE_USER_ADDRESS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_USER_ADDRESS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// get all orders reducer\r\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_REQUEST:\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                orders: [],\r\n                error: \"\"\r\n            }\r\n        case GET_ALL_ORDERS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                orders: action.payload,\r\n                error: \"\"\r\n            }\r\n        case GET_ALL_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orders: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport allReducers from './reducers/index'\r\n\r\nconst middleware = [thunk]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nlet initialState = {\r\n    userLoginReducer: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst store = createStore(allReducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCTS_LIST_REQUEST,\r\n    PRODUCTS_LIST_SUCCESS,\r\n    PRODUCTS_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    CREATE_PRODUCT_REQUEST,\r\n    CREATE_PRODUCT_SUCCESS,\r\n    CREATE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n\r\n    CHANGE_DELIVERY_STATUS_REQUEST,\r\n    CHANGE_DELIVERY_STATUS_SUCCESS,\r\n    CHANGE_DELIVERY_STATUS_FAIL,\r\n\r\n} from '../constants/index'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n// products list\r\nexport const getProductsList = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCTS_LIST_REQUEST\r\n        })\r\n\r\n        // call api\r\n        const { data } = await axios.get(\"/api/products/\")\r\n\r\n        dispatch({\r\n            type: PRODUCTS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCTS_LIST_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// product details\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        })\r\n\r\n        // call api\r\n        const { data } = await axios.get(`/api/product/${id}/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// create product\r\nexport const createProduct = (product) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: CREATE_PRODUCT_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.post(\r\n            \"/api/product-create/\",\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: CREATE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// delete product\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.delete(\r\n            `/api/product-delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// update product\r\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.put(\r\n            `/api/product-update/${id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// change ordered product delivery status\r\nexport const changeDeliveryStatus = (id, product) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: CHANGE_DELIVERY_STATUS_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.put(\r\n            `/account/change-order-status/${id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: CHANGE_DELIVERY_STATUS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHANGE_DELIVERY_STATUS_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport React from 'react'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <div>\r\n            <Card className=\"mb-4 rounded\">\r\n\r\n                <Card.Body>\r\n                    <Link to={`/product/${product.id}`}>\r\n                        <Card.Img variant=\"top\" src={product.image} height=\"162\" />\r\n                    </Link>\r\n                    <Link to={`/product/${product.id}`}>\r\n                        <Card.Title as=\"div\">\r\n                            <strong>{product.name}</strong>\r\n                        </Card.Title>\r\n                    </Link>\r\n\r\n                    <Card.Text as=\"h3\">\r\n                        $ {product.price}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductsList } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport { Spinner, Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CREATE_PRODUCT_RESET } from '../constants'\r\n\r\n\r\nfunction ProductsListPage() {\r\n\r\n    let history = useHistory()\r\n    let searchTerm = history.location.search\r\n    const dispatch = useDispatch()\r\n\r\n    // products list reducer\r\n    const productsListReducer = useSelector(state => state.productsListReducer)\r\n    const { loading, error, products } = productsListReducer\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList())\r\n        dispatch({\r\n            type: CREATE_PRODUCT_RESET\r\n        })\r\n        //dispatch(checkTokenValidation())\r\n    }, [dispatch])\r\n\r\n    const showNothingMessage = () => {\r\n        return (\r\n            <div>\r\n                {!loading ? <Message variant='info'>Nothing to show</Message> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Products</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <h2>Pre-Built PC</h2>\r\n                    <h7>Looking for the pre-builts PC? Here you can explore the pre-builts PCs under every segment and PCs, which are exclusively picked by our editorial team for the power-packed performance.</h7>\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card m-2\">\r\n                            <img className=\"card-img-top\" src=\"images/pc-builds.jpg\"\r\n                                alt=\"Pre-Built Gaming PC\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Pre-Built Gaming PC</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card m-2\">\r\n                            <img className=\"card-img-top\" src=\"images/pc-builds.jpg\"\r\n                                alt=\"Pre-Built Cheap PC\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Pre-Built Cheap PC</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card m-2\">\r\n                            <img className=\"card-img-top\" src=\"images/pc-builds.jpg\"\r\n                                alt=\"Pre-Built AIO PC\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Pre-Built AIO PC</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <input type='button' className='btn btn-secondary' value={'Explore Pre-Built PCs'} />\r\n\r\n                    <br /><br />\r\n                    <h2>Best Laptops</h2>\r\n                    <h7>Looking for the best laptops? Laptops can be a daunting purchase, but luckily we've narrowed it down for you. In this section, you'll find only the best laptops that will help you acheive better performance and experience.</h7>\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card m-2\">\r\n                            <img className=\"card-img-top\" src=\"images/laptop.jpg\"\r\n                                alt=\"High-End Gaming Laptop\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">High-End Gaming Laptop</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card m-2\">\r\n                            <img className=\"card-img-top\" src=\"images/pc-builds.jpg\"\r\n                                alt=\"Cheap Laptops\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Cheap Laptops</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card m-2\">\r\n                            <img className=\"card-img-top\" src=\"images/pc-builds.jpg\"\r\n                                alt=\"Business Laptops\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Business Laptops</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <input type='button' className='btn btn-secondary' value={'Explore Laptops'} />\r\n                </div>\r\n                <br /><br />\r\n\r\n                <Row>\r\n\r\n                    {/* If length of the filter result is equal to 0 then show 'nothing found' message\r\n                        with help of showNothingMessage function else show the filtered result on the\r\n                        webpage and then run the map function */}\r\n\r\n                    {(products.filter((item) =>\r\n                        item.name.toLowerCase().includes(searchTerm !== \"\" ? searchTerm.split(\"=\")[1] : \"\")\r\n                    )).length === 0 ? showNothingMessage() : (products.filter((item) =>\r\n                        item.name.toLowerCase().includes(searchTerm !== \"\" ? searchTerm.split(\"=\")[1] : \"\")\r\n                    )).map((product, idx) => (\r\n                        <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                            <div className=\"mx-2\">\r\n                                <Product product={product} />\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                    )}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsListPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteProduct, getProductDetails } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport { Spinner, Row, Col, Container, Card, Button, Modal } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { CREATE_PRODUCT_RESET, DELETE_PRODUCT_RESET, UPDATE_PRODUCT_RESET, CARD_CREATE_RESET } from '../constants'\r\n\r\n\r\nfunction ProductDetailsPage({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // modal state and functions\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // product details reducer\r\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\r\n    const { loading, error, product } = productDetailsReducer\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // product details reducer\r\n    const deleteProductReducer = useSelector(state => state.deleteProductReducer)\r\n    const { success: productDeletionSuccess } = deleteProductReducer\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_RESET\r\n        })\r\n        dispatch({\r\n            type: CREATE_PRODUCT_RESET\r\n        })\r\n        dispatch({\r\n            type: CARD_CREATE_RESET\r\n        })\r\n    }, [dispatch, match])\r\n\r\n    // product delete confirmation\r\n    const confirmDelete = () => {\r\n        dispatch(deleteProduct(match.params.id))\r\n        handleClose()\r\n    }\r\n\r\n    // after product deletion\r\n    if (productDeletionSuccess) {\r\n        alert(\"Product successfully deleted.\")\r\n        history.push(\"/\")\r\n        dispatch({\r\n            type: DELETE_PRODUCT_RESET\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* Modal Start*/}\r\n            <div>\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\r\n                            {\" \"}\r\n                            Delete Confirmation\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to delete this product <em>\"{product.name}\"</em>?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={() => confirmDelete()}>\r\n                            Confirm Delete\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handleClose}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal End */}\r\n\r\n            {loading && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Product Details</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                <div>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Card.Img variant=\"top\" src={product.image} height=\"420\" />\r\n\r\n                                {/* Product edit and delete conditions */}\r\n\r\n                                {userInfo && userInfo.admin ?\r\n                                    <span style={{ display: \"flex\" }}>\r\n                                        < button\r\n                                            className=\"btn mt-2 btn-danger btn-sm button-focus-css\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            onClick={() => handleShow()}\r\n                                        >Delete Product\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            className=\"ml-2 mt-2 btn btn-primary btn-sm button-focus-css\"\r\n                                            onClick={() => history.push(`/product-update/${product.id}/`)}\r\n                                            style={{ width: \"100%\" }}\r\n                                        >Edit Product\r\n                                        </button>\r\n                                    </span>\r\n                                    : \"\"}\r\n                            </Col>\r\n\r\n                            <Col sm>\r\n                                <b>{product.name}</b>\r\n                                <hr />\r\n                                <span className=\"justify-description-css\">\r\n                                    <p>{product.description}</p>\r\n                                </span>\r\n                                <span style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    border: \"1px solid\",\r\n                                    borderColor: \"#C6ACE7\",\r\n                                    padding: \"2px\"\r\n                                }}>\r\n                                    Price:<span className=\"text-success ml-2\">$ {product.price}</span>\r\n                                </span>\r\n                            </Col>\r\n                            <Col sm>\r\n                                <b>Buy</b>\r\n                                <hr />\r\n                                {product.stock ?\r\n                                    <Link to={`${product.id}/checkout/`}>\r\n                                        <button className=\"btn btn-primary\">\r\n                                            <span>Pay with Stripe</span>\r\n                                        </button>\r\n                                    </Link>\r\n                                    :\r\n                                    <Message variant='danger'>\r\n                                        Out Of Stock!\r\n                                    </Message>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductDetailsPage\r\n","import {\r\n    CARD_CREATE_REQUEST,\r\n    CARD_CREATE_SUCCESS,\r\n    CARD_CREATE_FAIL,\r\n\r\n    CHARGE_CARD_REQUEST,\r\n    CHARGE_CARD_SUCCESS,\r\n    CHARGE_CARD_FAIL,\r\n\r\n    SAVED_CARDS_LIST_REQUEST,\r\n    SAVED_CARDS_LIST_SUCCESS,\r\n    SAVED_CARDS_LIST_FAIL,\r\n\r\n    DELETE_SAVED_CARD_REQUEST,\r\n    DELETE_SAVED_CARD_SUCCESS,\r\n    DELETE_SAVED_CARD_FAIL,\r\n\r\n    UPDATE_STRIPE_CARD_REQUEST,\r\n    UPDATE_STRIPE_CARD_SUCCESS,\r\n    UPDATE_STRIPE_CARD_FAIL,\r\n\r\n} from '../constants/index'\r\n\r\nimport axios from 'axios'\r\n\r\n// create card\r\nexport const createCard = (cardData) => async (dispatch, getState) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: CARD_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n                \"Card-Number\": cardData.cardNumber,\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.post(\r\n            \"/payments/create-card/\",\r\n            {\r\n                'email': cardData.email,\r\n                'number': cardData.cardNumber,\r\n                'exp_month': cardData.expMonth,\r\n                'exp_year': cardData.expYear,\r\n                'cvc': cardData.cvc,\r\n                'save_card': cardData.saveCard\r\n            },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: CARD_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CARD_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// charge customer\r\nexport const chargeCustomer = (cardData) => async (dispatch, getState) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: CHARGE_CARD_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.post(\r\n            \"/payments/charge-customer/\",\r\n            cardData,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: CHARGE_CARD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHARGE_CARD_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// saved cards list\r\nexport const savedCardsList = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: SAVED_CARDS_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.get('/account/stripe-cards/', config)\r\n\r\n        dispatch({\r\n            type: SAVED_CARDS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SAVED_CARDS_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// update stripe card\r\nexport const updateStripeCard = (cardData) => async (dispatch, getState) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: UPDATE_STRIPE_CARD_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.post(\r\n            \"/payments/update-card/\",\r\n            cardData,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: UPDATE_STRIPE_CARD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_STRIPE_CARD_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// delete saved card\r\nexport const deleteSavedCard = (card_number) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: DELETE_SAVED_CARD_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.post(\r\n            '/payments/delete-card/',\r\n            { \"card_number\": card_number },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELETE_SAVED_CARD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_SAVED_CARD_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { deleteSavedCard } from '../actions/cardActions'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\n\r\nfunction DeleteCardComponent({ userId, deleteCardNumber, runCardDeleteHandler, toggleRunCardDeleteHandler }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // card delete confirmation\r\n    const confirmDelete = (c_number) => {\r\n        dispatch(deleteSavedCard(c_number))\r\n        toggleRunCardDeleteHandler()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Modal Start*/}\r\n            <div>\r\n                <Modal show={runCardDeleteHandler} onHide={toggleRunCardDeleteHandler}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\r\n                            {\" \"}\r\n                            Delete Confirmation\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>\r\n                            <b>\r\n                                Warning!\r\n                            </b>\r\n                            {\" \"}deleting your card will delete your stripe account and all its data.\r\n                        </p>\r\n                        Are you sure you want to delete the card \"{deleteCardNumber}\"?\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={() => confirmDelete(deleteCardNumber)}>\r\n                            Confirm Delete\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={toggleRunCardDeleteHandler}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal End */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteCardComponent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\r\nimport { createCard } from '../actions/cardActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from './Message';\r\nimport DeleteCardComponent from './DeleteCardComponent';\r\n\r\n// to manage our exp month and exp year\r\nlet todays_date = new Date()\r\nlet current_year = todays_date.getFullYear()\r\n\r\n\r\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [userId] = useState(0)\r\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\r\n    const [differentCard, setDifferentCard] = useState(false)\r\n    const [cardDetails, setCardDetails] = useState(false)\r\n    const [cardDetailsId, setCardDetailsId] = useState(0)\r\n    const [showStripeCard, setShowStripeCard] = useState(false)\r\n    const [deleteCardNumber] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [cardNumber, setCardNumber] = useState(\"\")\r\n    const [expMonth, setExpMonth] = useState(\"\")\r\n    const [expYear, setExpYear] = useState(\"\")\r\n    const [cvc, setCvc] = useState(\"\")\r\n    const [saveCard, setSaveCard] = useState(false)\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // card delete reducer\r\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\r\n    const { loading, success, error } = deleteSavedCardReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        }\r\n    }, [history, userInfo, success])\r\n\r\n    // stripe card form submission handler\r\n    const handleCardSubmittion = (e) => {\r\n        e.preventDefault()\r\n        if (addressSelected) {\r\n            const data = {\r\n                \"email\": email === \"\" ? userInfo.email : email,\r\n                \"cardNumber\": cardNumber,\r\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\r\n                \"expYear\": expYear ? Number(expYear) : \"\",\r\n                \"cvc\": cvc ? Number(cvc) : \"\",\r\n                \"saveCard\": saveCard\r\n            }\r\n            dispatch(createCard(data))\r\n        } else {\r\n            alert(\"Please select or add your Address to continue\")\r\n        }\r\n    }\r\n\r\n    // pay with already existing (saved) stripe card handler\r\n    const payWithSavedCard = (cardData) => {\r\n        if (addressSelected) {\r\n            const data = {\r\n                \"email\": cardData.email,\r\n                \"cardNumber\": cardData.card_number,\r\n                \"expMonth\": Number(cardData.exp_month),\r\n                \"expYear\": Number(cardData.exp_year),\r\n                \"cvc\": Number(cardData.cvc),\r\n                \"saveCard\": false\r\n            }\r\n            dispatch(createCard(data))\r\n        } else {\r\n            alert(\"Please select or add your Address to continue\")\r\n        }\r\n    }\r\n\r\n    // show card details\r\n    const showCardDetails = (cardData) => {\r\n        if (cardDetails) {\r\n            if (cardData.id === cardDetailsId) {\r\n                return (\r\n                    <div>\r\n                        <button\r\n                            onClick={() => setCardDetails(false)}\r\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\r\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\r\n                            close\r\n                        </button>\r\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\r\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleRunCardDeleteHandler = () => {\r\n        setRunCardDeleteHandler(!runCardDeleteHandler)\r\n    }\r\n\r\n    // reload the webpage after new card deletion\r\n    if (success) {\r\n        alert(\"Card successfully deleted.\")\r\n        window.location.reload()\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* Working on Modal Start*/}\r\n            <div>\r\n                <>\r\n                    <DeleteCardComponent\r\n                        userId={userId}\r\n                        deleteCardNumber={deleteCardNumber}\r\n                        runCardDeleteHandler={runCardDeleteHandler}\r\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\r\n                    />\r\n                </>\r\n            </div>\r\n\r\n            {/* Working on Modal End */}\r\n\r\n            {loading\r\n                &&\r\n                <span style={{ display: \"flex\" }}>\r\n                    <h5>Deleting card</h5>\r\n                    <span className=\"ml-2\">\r\n                        <Spinner animation=\"border\" />\r\n                    </span>\r\n                </span>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <div className=\"card px-4 py-4\">\r\n                <button className={showStripeCard\r\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\r\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\r\n                    onClick={() =>\r\n                        setShowStripeCard(!showStripeCard)\r\n                    }>\r\n                    {showStripeCard\r\n                        ? \"close\"\r\n                        : \"Enter stripe card\"}\r\n                </button>\r\n\r\n                {showStripeCard ?\r\n                    <Form onSubmit={handleCardSubmittion}>\r\n\r\n                        {differentCard ?\r\n                            <Form.Group>\r\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\r\n                                <Form.Control\r\n                                    autoFocus={true}\r\n                                    type=\"email\"\r\n                                    pattern=\".+@gmail\\.com\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    placeholder=\"Email address linked with the Card\" />\r\n                            </Form.Group>\r\n                            :\r\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\r\n                        }\r\n                        <p>\r\n                            <Link to=\"#\" onClick={() => {\r\n                                setDifferentCard(!differentCard)\r\n                                setEmail(\"\")\r\n                            }}>\r\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\r\n                            </Link>\r\n                        </p>\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label><b>Card Number</b></Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                pattern=\"[0-9]+\"\r\n                                value={cardNumber}\r\n                                onChange={(e) => setCardNumber(e.target.value)}\r\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label><b>Exp Month</b></Form.Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        defaultValue={expMonth}\r\n                                        onChange={e => setExpMonth(e.target.value)}\r\n                                        required\r\n                                    >\r\n                                        <option>-- --</option>\r\n                                        {Array.from({ length: 12 }, (x, i) => <option\r\n                                            key={i}\r\n                                        >\r\n                                            {i + 1}\r\n                                        </option>\r\n                                        )}\r\n                                    </select>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label><b>Exp Year</b></Form.Label>\r\n                                    <select className=\"form-control\"\r\n                                        defaultValue={expYear}\r\n                                        onChange={e => setExpYear(e.target.value)}\r\n                                        required\r\n                                    >\r\n                                        <option>-- --</option>\r\n                                        {Array.from({ length: 21 }, (x, i) => <option\r\n                                            key={i}\r\n                                        >{current_year + i}</option>)}\r\n                                    </select>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label><b>CVC Number</b></Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"numbers\"\r\n                                        onChange={(e) => setCvc(e.target.value)}\r\n                                        placeholder=\"123\" \r\n                                        maxLength=\"3\"\r\n                                        pattern=\"[0-9]+\"\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Form.Text className=\"text-muted pb-2\">\r\n                            <span style={{ display: \"flex\" }}>\r\n                                <input\r\n                                    hidden={differentCard}\r\n                                    type=\"checkbox\"\r\n                                    className=\"mt-1\"\r\n                                    value={differentCard ? false : saveCard}\r\n                                    onChange={() => setSaveCard(!saveCard)}\r\n                                />\r\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\r\n                            </span>\r\n                        </Form.Text>\r\n\r\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                    : \"\"}\r\n\r\n            </div>\r\n\r\n            <div className=\"my-4 card px-4 py-4\">\r\n                <h5>Saved card</h5>\r\n                {stripeCards.length > 0 ?\r\n                    stripeCards.map(cardData => (\r\n                        <div key={cardData.id}>\r\n                            <Card\r\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n                                className=\"p-2\">\r\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\r\n                                <div>\r\n                                    {showCardDetails(cardData)}\r\n                                    <button onClick={() => {\r\n                                        setCardDetails(true)\r\n                                        setCardDetailsId(cardData.id)\r\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\r\n                                    >\r\n                                        Show Card Details\r\n                                    </button>\r\n                                    <button onClick={() => payWithSavedCard(cardData)}\r\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\r\n                                        Pay with this Card\r\n                                    </button>\r\n                                </div>\r\n                            </Card>\r\n\r\n                            {/* Edit Card Buttton */}\r\n\r\n                            <span\r\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\r\n                                <i\r\n                                    title=\"edit card\"\r\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\r\n                                ></i>\r\n                            </span>\r\n                        </div>\r\n                    )) : \"No saved card.\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateCardComponent\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    CARD_CREATE_RESET,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAILS_REQUEST,\r\n    UPDATE_USER_DETAILS_SUCCESS,\r\n    UPDATE_USER_DETAILS_FAIL,\r\n\r\n    DELETE_USER_ACCOUNT_REQUEST,\r\n    DELETE_USER_ACCOUNT_SUCCESS,\r\n    DELETE_USER_ACCOUNT_FAIL,\r\n\r\n    GET_USER_ALL_ADDRESSES_REQUEST,\r\n    GET_USER_ALL_ADDRESSES_SUCCESS,\r\n    GET_USER_ALL_ADDRESSES_FAIL,\r\n\r\n    GET_SINGLE_ADDRESS_REQUEST,\r\n    GET_SINGLE_ADDRESS_SUCCESS,\r\n    GET_SINGLE_ADDRESS_FAIL,\r\n\r\n    CREATE_USER_ADDRESS_REQUEST,\r\n    CREATE_USER_ADDRESS_SUCCESS,\r\n    CREATE_USER_ADDRESS_FAIL,\r\n\r\n    UPDATE_USER_ADDRESS_REQUEST,\r\n    UPDATE_USER_ADDRESS_SUCCESS,\r\n    UPDATE_USER_ADDRESS_FAIL,\r\n\r\n    DELETE_USER_ADDRESS_REQUEST,\r\n    DELETE_USER_ADDRESS_SUCCESS,\r\n    DELETE_USER_ADDRESS_FAIL,\r\n\r\n    CHECK_TOKEN_VALID_REQUEST,\r\n    CHECK_TOKEN_VALID_SUCCESS,\r\n    CHECK_TOKEN_VALID_FAIL,\r\n\r\n    GET_ALL_ORDERS_REQUEST,\r\n    GET_ALL_ORDERS_SUCCESS,\r\n    GET_ALL_ORDERS_FAIL,\r\n\r\n} from '../constants/index'\r\n\r\nimport axios from 'axios'\r\n\r\n// Login\r\nexport const login = (username, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/account/login/',\r\n            { 'username': username, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data)) // will create a new key-value pair in localStorage\r\n        // also see store.js file\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: CARD_CREATE_RESET\r\n    })\r\n}\r\n\r\n// register\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/account/register/`,\r\n            { 'username': username, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// check token validation\r\nexport const checkTokenValidation = () => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: CHECK_TOKEN_VALID_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.get(\"/payments/check-token/\", config)\r\n\r\n        dispatch({\r\n            type: CHECK_TOKEN_VALID_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHECK_TOKEN_VALID_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// user details\r\nexport const userDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.get(`/account/user/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// user update details\r\nexport const userUpdateDetails = (userData) => async (dispatch, getState) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.put(\r\n            `/account/user_update/${userInfo.id}/`,\r\n            {\r\n                \"username\": userData.username,\r\n                \"email\": userData.email,\r\n                \"password\": userData.password\r\n            },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// user account delete\r\nexport const userAccountDelete = (userData) => async (dispatch, getState) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: DELETE_USER_ACCOUNT_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.post(\r\n            `/account/user_delete/${userData.id}/`,\r\n            {\r\n                \"password\": userData.password\r\n            },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELETE_USER_ACCOUNT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_ACCOUNT_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// get user address\r\nexport const getAllAddress = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_ALL_ADDRESSES_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.get(\r\n            \"/account/all-address-details/\",\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_USER_ALL_ADDRESSES_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_USER_ALL_ADDRESSES_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// get user single address\r\nexport const getSingleAddress = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_SINGLE_ADDRESS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.get(\r\n            `/account/address-details/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_ADDRESS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_SINGLE_ADDRESS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// create user address\r\nexport const createUserAddress = (addressData) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_ADDRESS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.post(\r\n            \"/account/create-address/\",\r\n            addressData,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: CREATE_USER_ADDRESS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_USER_ADDRESS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// update user address\r\nexport const updateUserAddress = (id, addressData) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_ADDRESS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.put(\r\n            `/account/update-address/${id}/`,\r\n            addressData,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_ADDRESS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_ADDRESS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// delete user address\r\nexport const deleteUserAddress = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_ADDRESS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.delete(\r\n            `/account/delete-address/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELETE_USER_ADDRESS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_ADDRESS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// get all orders\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLoginReducer: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // call api\r\n        const { data } = await axios.get(\r\n            `/account/all-orders-list/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_FAIL,\r\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Spinner, Form, Button, Card } from 'react-bootstrap'\r\nimport { chargeCustomer } from '../actions/cardActions'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getSingleAddress } from '../actions/userActions'\r\nimport Message from './Message'\r\n\r\n\r\nconst ChargeCardComponent = ({ product, match, selectedAddressId, addressSelected }) => {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    // create card reducer\r\n    const createCardReducer = useSelector(state => state.createCardReducer)\r\n    const { cardData } = createCardReducer\r\n\r\n    // charge card reducer\r\n    const chargeCardReducer = useSelector(state => state.chargeCardReducer)\r\n    const { success: chargeSuccessfull, error: chargeError, loading: chargingStatus } = chargeCardReducer\r\n\r\n    // get single address reducer    \r\n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\r\n    const { address } = getSingleAddressReducer\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleAddress(selectedAddressId))\r\n    }, [dispatch, match, selectedAddressId])\r\n\r\n    // charge card handler\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const address_detail = `${address.house_no}, near ${address.landmark}, ${address.city}, \r\n        ${address.state}, ${address.pin_code}`\r\n        const data = {\r\n            \"email\": cardData.email,\r\n            \"source\": cardData.id,\r\n            \"amount\": product.price,\r\n            \"name\": address.name,\r\n            \"card_number\": cardData.card_data.last4,\r\n            \"address\": address_detail,\r\n            \"ordered_item\": product.name,\r\n            \"paid_status\": true,\r\n            \"total_price\": product.price,\r\n            \"is_delivered\": false,\r\n            \"delivered_at\": \"Not Delivered\",\r\n        }\r\n        dispatch(chargeCustomer(data))\r\n    }\r\n\r\n    if (chargeSuccessfull) {\r\n        history.push({\r\n            pathname: '/payment-status/',\r\n            state: { detail: product }\r\n        })\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {chargeError ? <Message variant=\"danger\">{chargeError}</Message> : \"\"}\r\n            <span className=\"text-info\">\r\n                <h5>Confirm payment</h5>\r\n            </span>\r\n            <div className=\"mb-2\">\r\n                Using Card: XXXX XXXX XXXX {cardData.card_data.last4}\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n\r\n                {chargingStatus ?\r\n                    <Button variant=\"primary\" disabled style={{ width: \"100%\" }}>\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        {\" \"}Processing Payment...\r\n                    </Button>\r\n                    :\r\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\" }}>\r\n                        Pay ${product.price}\r\n                    </Button>\r\n                }\r\n            </Form>\r\n\r\n            <Card\r\n                className=\"p-2 mt-2 mb-2\"\r\n                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n            >\r\n                {address ?\r\n                    <div>\r\n                        <span className=\"text-info\">\r\n                            <b><em>Will be delievered at this address</em></b>\r\n                        </span>\r\n                        <p></p>\r\n                        <p><b>Name: </b>{address ? address.name : \"\"}</p>\r\n                        <p><b>Phone Number: </b>{address ? address.phone_number : \"\"}</p>\r\n                        <p><b>House Number: </b>{address ? address.house_no : \"\"}</p>\r\n                        <p><b>Landmark: </b>{address ? address.landmark : \"\"}</p>\r\n                        <p><b>City: </b>{address ? address.city : \"\"}</p>\r\n                        <p><b>State: </b>{address ? address.state : \"\"}</p>\r\n                        <p><b>Pin Code/Zip Code: </b>{address ? address.pin_code : \"\"}</p>\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n                }\r\n            </Card>\r\n            <Link to=\"#\" onClick={() => window.location.reload()}>Select a different card to pay</Link>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ChargeCardComponent\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Card } from 'react-bootstrap'\r\nimport { getAllAddress } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction UserAddressComponent({ handleAddressId }) {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const updatehandleAddressId = (id) => {\r\n        handleAddressId(id)\r\n    }\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // get address list reducer\r\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\r\n    const { addresses } = getAllAddressesOfUserReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(getAllAddress())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {addresses ? addresses.map((address, idx) => (\r\n                <div key={idx}>\r\n                    <Card\r\n                        className=\"p-2 mb-2\"\r\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n                        key={address.id}\r\n\r\n                    >\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"addressId\"\r\n                            value={0}\r\n                            onClick={() => updatehandleAddressId(address.id)}\r\n                        />                        \r\n                        <span><b>Name: </b>{address.name}</span>\r\n                        <span><b>Address: </b>\r\n                        {address.house_no}, {address.landmark}, {address.city}, \r\n                        {address.state}, {address.pin_code}</span>\r\n                    </Card>\r\n                </div>\r\n            ))\r\n                :\r\n                \"empty\"\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserAddressComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Row, Col, Container, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails } from '../actions/productActions'\r\nimport CreateCardComponent from '../components/CreateCardComponent'\r\nimport ChargeCardComponent from '../components/ChargeCardComponent'\r\nimport Message from '../components/Message'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { savedCardsList } from '../actions/cardActions'\r\nimport UserAddressComponent from '../components/UserAddressComponent'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { CHARGE_CARD_RESET } from '../constants/index'\r\n\r\nconst CheckoutPage = ({ match }) => {\r\n\r\n    let history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    const [addressSelected, setAddressSelected] = useState(false)\r\n    const [selectedAddressId, setSelectedAddressId] = useState(0)\r\n\r\n    // set address id handler\r\n    const handleAddressId = (id) => {\r\n        if (id) {\r\n            setAddressSelected(true)\r\n        }\r\n        setSelectedAddressId(id)\r\n    }\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    // product details reducer\r\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\r\n    const { loading, error, product } = productDetailsReducer\r\n\r\n    // create card reducer\r\n    const createCardReducer = useSelector(state => state.createCardReducer)\r\n    const { error: cardCreationError, success, loading: cardCreationLoading } = createCardReducer\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // saved cards list reducer\r\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\r\n    const { stripeCards } = savedCardsListReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(getProductDetails(match.params.id))\r\n            dispatch(savedCardsList())\r\n            dispatch({\r\n                type: CHARGE_CARD_RESET\r\n            })\r\n        }\r\n    }, [dispatch, match, history, success, userInfo])\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {cardCreationError ? <Message variant='danger'>{cardCreationError}</Message> : \"\"}\r\n            {loading\r\n                &&\r\n                <span style={{ display: \"flex\" }}>\r\n                    <h5>Getting Checkout Info</h5>\r\n                    <span className=\"ml-2\">\r\n                        <Spinner animation=\"border\" />\r\n                    </span>\r\n                </span>}\r\n            {!loading && cardCreationLoading ?\r\n                <span style={{ display: \"flex\" }}>\r\n                    <h5>Checking your card</h5>\r\n                    <span className=\"ml-2\">\r\n                        <Spinner animation=\"border\" />\r\n                    </span>\r\n                </span> : \"\"}\r\n            {error ? <Message variant='danger'>{error}</Message> :\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <h3>Checkout Summary</h3>\r\n                            <Card className=\"mb-4\">\r\n                                <Card.Body>\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Image src={product.image} alt=\"image\" height=\"180\" />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <h5 className=\"card-title text-capitalize\">\r\n                                                    {product.name}\r\n                                                </h5>\r\n                                                <span className=\"card-text text-success\">$ {product.price}</span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                            <span style={{ display: \"flex\" }}>\r\n                                <h3>Billing Address</h3>\r\n                                <Link\r\n                                    className=\"ml-2 mt-2\"\r\n                                    to=\"/all-addresses/\"\r\n                                >\r\n                                    Edit/Add Address\r\n                                </Link>\r\n                            </span>\r\n                            <UserAddressComponent handleAddressId={handleAddressId} />\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <h3>\r\n                                Payments Section\r\n                            </h3>\r\n                            {success ?\r\n                                <ChargeCardComponent\r\n                                    selectedAddressId={selectedAddressId}\r\n                                    addressSelected={addressSelected}\r\n                                    product={product}\r\n                                />\r\n                                :\r\n                                <CreateCardComponent\r\n                                    addressSelected={addressSelected}\r\n                                    stripeCards={stripeCards} />}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutPage","import React, { useState } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nfunction SearchBarForProducts() {\r\n\r\n    let history = useHistory()\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(searchTerm) {\r\n            history.push(`/?searchTerm=${searchTerm}`)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <span\r\n                    style={{ display: \"flex\" }}\r\n                    className=\"\"\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchTerm}\r\n                        placeholder=\"search products\"\r\n                        className=\"form-control\"\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary ml-2 button-focus-css\"\r\n                    ><i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBarForProducts\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchBarForProducts from './SearchBarForProducts'\r\n\r\nconst search = {\r\n    flexBasis: \"43%\",\r\n    paddingLeft: \"20px\",\r\n    paddingRight: \"20px\",\r\n    alignItems: \"center\",\r\n    diplay: \"flex\"\r\n};\r\n\r\nconst logo = {\r\n    flexBasis: \"40%\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    display: \"inline-block\",\r\n    color: \"#fff\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"26px\",\r\n    width: \"250px\"\r\n};\r\n\r\nfunction NavBar() {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // logout\r\n    const logoutHandler = () => {\r\n        dispatch(logout()) // action\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n\r\n                <header>\r\n                    <div style={logo}>\r\n                        <a href=\"http://localhost:3000/\">\r\n                            <img\r\n                                src=\"https://static.pcbuilder.net/assets/images/logo-80.png\"\r\n                                alt=\"PC Builder\" height=\"80\" width=\"80\">\r\n                            </img>\r\n                            <span>PC Builder</span> <sup><small>™</small></sup>\r\n                        </a>\r\n                    </div>\r\n\r\n                </header>\r\n\r\n                <Container>\r\n                    {/*<LinkContainer to=\"/\">\r\n                        <Navbar.Brand><i className=\"mb-2 fas fa-home\"> Home</i></Navbar.Brand>\r\n    </LinkContainer>*/}\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                            {/* New Product (Admins Only) */}\r\n\r\n                            {userInfo && userInfo.admin ?\r\n                                <LinkContainer to=\"/new-product/\">\r\n                                    <Nav.Link >Add Product</Nav.Link>\r\n                                </LinkContainer>\r\n                                : \"\"\r\n                            }\r\n\r\n                            <span className=\"\">\r\n                                <SearchBarForProducts />\r\n                            </span>\r\n\r\n                        </Nav>\r\n\r\n                        {/* login-logout condition here */}\r\n\r\n                        {userInfo ?\r\n                            <div>\r\n                                <NavDropdown className=\"navbar-nav text-capitalize\" title={userInfo.username} id='username'>\r\n                                    <LinkContainer to=\"/account\">\r\n                                        <NavDropdown.Item>Account Settings</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/all-addresses/\">\r\n                                        <NavDropdown.Item>Address Settings</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/stripe-card-details/\">\r\n                                        <NavDropdown.Item>Card Settings</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/all-orders/\">\r\n                                        <NavDropdown.Item>All Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </div>\r\n                            :\r\n                            <LinkContainer to=\"/\" style={{ display: 'none' }}>\r\n                                <Nav.Link><i className=\"fas fa-user\"></i> Login / Register</Nav.Link>\r\n                            </LinkContainer>\r\n                        }\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\"\r\n                style={{ borderTop: '1px solid grey', borderBottom: '1px solid grey' }}>\r\n\r\n                <Navbar.Collapse id=\"secondary-navbar-nav\">\r\n                    <Nav>\r\n                        <LinkContainer to=\"/system-builder/\" >\r\n                            <Nav.Link >System Builder</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/prebuilt-pc/\" style={{ borderLeft: '1px solid grey' }}>\r\n                            <Nav.Link >Pre-Built PC</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/laptops/\" style={{ borderLeft: '1px solid grey' }}>\r\n                            <Nav.Link >Laptops</Nav.Link>\r\n                        </LinkContainer>\r\n                        <div>\r\n                            <NavDropdown className=\"navbar-nav text-capitalize\" style={{ borderLeft: '1px solid grey' }}\r\n                                title='Browse Products'>\r\n                                <LinkContainer to=\"/storage\">\r\n                                    <NavDropdown.Item>Storage</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/all-addresses/\">\r\n                                    <NavDropdown.Item>Graphics Card</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/power-supply/\">\r\n                                    <NavDropdown.Item>Power Supply</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/cases/\">\r\n                                    <NavDropdown.Item>Case</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/cases/\">\r\n                                    <NavDropdown.Item>CPU</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/cases/\">\r\n                                    <NavDropdown.Item>CPU Cooler</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/cases/\">\r\n                                    <NavDropdown.Item>Motherboard</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/cases/\">\r\n                                    <NavDropdown.Item>Memory</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        </div>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Navbar>\r\n\r\n            <div id=\"carouselExampleCaptions\"\r\n                style={{ paddingTop: \"100px\", paddingBottom: \"30px\", \"height\": \"450px\", \"position\": 'relative', backgroundColor: \"#343a40\", backgroundImage: `url(\"images/black-texture-background-hexagon.jpg\")`, backgroundSize: \"100%\", backgroundRepeat: 'no-repeat', opacity: '1.0' }}\r\n                className=\"carousel slide\" data-ride=\"carousel\">\r\n                <ol className=\"carousel-indicators\">\r\n                    <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"0\"\r\n                        className=\"active\" style={{ color: 'black' }}></li>\r\n                    <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"1\"></li>\r\n                    <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"2\"></li>\r\n                </ol>\r\n                <div className=\"carousel-inner\" style={{ width: \"80%\" }}>\r\n                    <div className=\"carousel-item active\">\r\n                        <div className=\"carousel-caption d-none d-md-block\"\r\n                            style={{ \"position\": 'relative', textAlign: \"left\" }}>\r\n                            <h2>Experience the New Perspective of</h2>\r\n                            <h2><span className='text-primary'>Building</span> Your Dream PC</h2>\r\n                            <p style={{ paddingTop: \"50px\", width: \"80%\", wordWrap: \"break-word\" }}>Building your own PC is a rewarding experience. With our new approach,\r\n                                we'll help you to be sure that the compatibility of your selected PC parts is just right.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <div className=\"carousel-caption d-none d-md-block\"\r\n                            style={{ \"position\": 'relative', textAlign: \"left\" }}>\r\n                            <h2>Handling Your Toughest PC Parts</h2>\r\n                            <h2><span className='text-primary'>Compatibility</span> with Ease</h2>\r\n                            <p style={{ paddingTop: \"50px\", width: \"80%\", wordWrap: \"break-word\" }}>We handle the toughest task of PC compatibility with easeand provide\r\n                                you with the best compatibility that's available.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <div className=\"carousel-caption d-none d-md-block\"\r\n                            style={{ \"position\": 'relative', textAlign: \"left\" }}>\r\n                            <h2>Performing with Excellence to</h2>\r\n                            <h2><span className='text-primary'>Do More for More</span></h2>\r\n                            <p style={{ paddingTop: \"50px\", width: \"80%\", wordWrap: \"break-word\" }}>We are excellence with the pc parts compatibility to do more for you!\r\n                                With the ever-changing tech, you'll always get the latest and most accurate compatibility.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a className=\"carousel-control-prev\" href='#carouselExampleCaptions'\r\n                    type=\"button\" data-target=\"#carouselExampleCaptions\" data-slide=\"prev\"\r\n                    style={{ width: \"5%\" }}>\r\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a className=\"carousel-control-next\" href='#carouselExampleCaptions'\r\n                    type=\"button\" data-target=\"#carouselExampleCaptions\" data-slide=\"next\"\r\n                    style={{ width: \"5%\" }}>\r\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                </a>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom'\r\nimport Message from \"./Message\"\r\n\r\nconst PaymentStatus = () => {\r\n    const location = useLocation()\r\n\r\n    const renderData = () => {\r\n\r\n        try {\r\n            const boughtData = location.state.detail\r\n\r\n            return (\r\n                <div>\r\n                    <h3 className=\"text-success\">Payment was Successfull</h3>\r\n                    <Card className=\"p-3\">\r\n                        Successfully bought\r\n                        <br />\r\n                        <span className=\"mb-2\" style={{ display: \"flex\" }}>\r\n                            {boughtData.name},\r\n                            ${boughtData.price} <i className=\"text-primary ml-1 mt-1 fas fa-check-circle\"></i>\r\n                        </span>\r\n                        <Link to=\"/all-orders/\">Go to orders page</Link>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return <Message variant='info'>Payment status not available.</Message>\r\n        }\r\n    }\r\n\r\n    return renderData()\r\n}\r\n\r\nexport default PaymentStatus\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { login } from '../actions/userActions'\r\nimport Message from '../components/Message';\r\n\r\n\r\nfunction LoginPage({ history }) {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { error, userInfo } = userLoginReducer\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/') // homepage\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(username, password))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>                    \r\n                    <h1>Sign In</h1>                    \r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='username'>\r\n                            <Form.Label>\r\n                                Username\r\n                    </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"enter username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>\r\n                                Password\r\n                    </Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"enter your password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n                    </Form>\r\n\r\n                    <Row className=\"py-3\">\r\n                        <Col>\r\n                            Do not have an account?\r\n                    <Link\r\n                                to={`/register`}\r\n                            > Register</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginPage","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\n\r\nfunction RegisterPage({ history, variant }) {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // reducer\r\n    const userRegisterReducer = useSelector(state => state.userRegisterReducer)\r\n    const { error, userInfo } = userRegisterReducer\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/') // homepage\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match!')\r\n        } else {\r\n            dispatch(register(username, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    <h1>Sign Up</h1>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>\r\n                                Username\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"enter your username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>\r\n                                Email Address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"email\"\r\n                                placeholder=\"enter your email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>\r\n                                Password\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"password\"\r\n                                placeholder=\"enter your password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='passwordConfirm'>\r\n                            <Form.Label>\r\n                                Confirm Password\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"password\"\r\n                                placeholder=\"confirm your password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant='primary'>Sign Up</Button>\r\n                    </Form>\r\n\r\n                    <Row className=\"py-3\">\r\n                        <Col>\r\n                            Already have an account?\r\n                    <Link\r\n                                to={`/login`}\r\n                            > Login</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savedCardsList, updateStripeCard } from '../actions/cardActions'\r\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { UPDATE_STRIPE_CARD_RESET } from '../constants'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { useHistory } from 'react-router-dom'   \r\n\r\n\r\nconst CardUpdatePage = () => {\r\n\r\n    let history = useHistory()\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [cardNumber, setCardNumber] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [expMonth, setExpMonth] = useState(\"\")\r\n    const [expYear, setExpYear] = useState(\"\")\r\n    const [addressCity, setAddressCity] = useState(\"\")\r\n    const [addressCountry, setAddressCountry] = useState(\"\")\r\n    const [addressState, setAddressState] = useState(\"\")\r\n    const [addressZip, setAddressZip] = useState(\"\")\r\n    const [customerId, setCustomerId] = useState(\"\")\r\n    const [cardId, setCardId] = useState(\"\")\r\n\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // saved cards list reducer\r\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\r\n    const { stripeCards, loading } = savedCardsListReducer\r\n\r\n    // update card reducer\r\n    const updateStripeCardtReducer = useSelector(state => state.updateStripeCardtReducer)\r\n    const { success } = updateStripeCardtReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(savedCardsList())\r\n        }\r\n    }, [dispatch, history, userInfo, success])\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (customerId && cardId) {\r\n            const all_card_data = {\r\n                card_number: cardNumber,\r\n                customer_id: customerId,\r\n                card_id: cardId,\r\n                exp_month: expMonth,\r\n                exp_year: expYear,\r\n                name_on_card: name,\r\n                address_city: addressCity,\r\n                address_country: addressCountry,\r\n                address_state: addressState,\r\n                address_zip: addressZip\r\n            }\r\n            // action\r\n            dispatch(updateStripeCard(all_card_data))\r\n        }\r\n    }\r\n\r\n    const setCustomerAndCardIds = (cus_Id, card_Id, c_num) => {\r\n        setCustomerId(cus_Id)\r\n        setCardId(card_Id)\r\n        setCardNumber(c_num)\r\n    }\r\n\r\n    if (success) {\r\n        alert(\"Card Successfully Updated\")\r\n        history.push(\"/stripe-card-details\")\r\n        dispatch({\r\n            type: UPDATE_STRIPE_CARD_RESET\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    <span\r\n                        className=\"d-flex justify-content-center\"\r\n                        style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\r\n                        <em>Update Card Details</em>\r\n                    </span>\r\n                    {loading && <Spinner animation=\"border\" />}\r\n                    {stripeCards.map((each, idx) => (\r\n                        <div key={idx}>\r\n                            <Card\r\n                                className=\"p-4 mb-4\"\r\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n                            >\r\n                                <Form onSubmit={onSubmit}>\r\n\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label>\r\n                                            Name on Card\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            autoFocus={true}\r\n                                            type=\"text\"\r\n                                            defaultValue={each.name_on_card}\r\n                                            placeholder=\"full name\"\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='month'>\r\n                                        <Form.Label>\r\n                                            Exp Month\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            pattern=\"[0-9]+\"\r\n                                            maxLength=\"2\"\r\n                                            defaultValue={each.exp_month}\r\n                                            placeholder=\"exp month\"\r\n                                            onChange={(e) => setExpMonth(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='year'>\r\n                                        <Form.Label>\r\n                                            Exp Year\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            pattern=\"[0-9]+\"\r\n                                            defaultValue={each.exp_year}\r\n                                            placeholder=\"exp year\"\r\n                                            maxLength=\"4\"\r\n                                            onChange={(e) => setExpYear(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='city'>\r\n                                        <Form.Label>\r\n                                            Address City\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            defaultValue={each.address_city}\r\n                                            placeholder=\"address city\"\r\n                                            onChange={(e) => setAddressCity(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='country'>\r\n                                        <Form.Label>\r\n                                            Address Country\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            defaultValue={each.address_country}\r\n                                            placeholder=\"address country\"\r\n                                            onChange={(e) => setAddressCountry(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='state'>\r\n                                        <Form.Label>\r\n                                            Address State\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            defaultValue={each.address_state}\r\n                                            placeholder=\"address state\"\r\n                                            onChange={(e) => setAddressState(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='zip'>\r\n                                        <Form.Label>\r\n                                            Address Zip\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            defaultValue={each.address_zip}\r\n                                            placeholder=\"address zip\"\r\n                                            pattern=\"[0-9]+\"\r\n                                            maxLength=\"6\"\r\n                                            onChange={(e) => setAddressZip(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant='success'\r\n                                        onClick={() => setCustomerAndCardIds(each.customer_id, each.card_id, each.card_number)}\r\n                                        style={{ width: \"100%\" }}\r\n                                        className=\"btn-sm button-focus-css\">\r\n                                        Save Changes\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant='primary'\r\n                                        onClick={() => history.push(\"/stripe-card-details/\")}\r\n                                        style={{ width: \"100%\" }}\r\n                                        className=\"btn-sm mt-2 button-focus-css\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card>\r\n                        </div>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardUpdatePage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savedCardsList } from '../actions/cardActions'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport Message from \"../components/Message\"\r\nimport DeleteCardComponent from '../components/DeleteCardComponent'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst CardDetailsPage = () => {\r\n\r\n    let history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    const [userId, setUserId] = useState(0)\r\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\r\n    const [deleteCardNumber, setDeleteCardNumber] = useState(\"\")\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    // saved cards list reducer\r\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\r\n    const { stripeCards, loading } = savedCardsListReducer\r\n\r\n    // saved cards list reducer\r\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\r\n    const { success } = deleteSavedCardReducer\r\n\r\n\r\n    // toggle run card delete handler\r\n    const toggleRunCardDeleteHandler = () => {\r\n        setRunCardDeleteHandler(!runCardDeleteHandler)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(savedCardsList())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    // card deletion message\r\n    if (success) {\r\n        alert(\"Card successfully deleted.\")\r\n        window.location.reload()\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Card Information</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n\r\n            {/* Modal Start*/}\r\n            <div>\r\n                <>\r\n                    <DeleteCardComponent\r\n                        userId={userId}\r\n                        deleteCardNumber={deleteCardNumber}\r\n                        runCardDeleteHandler={runCardDeleteHandler}\r\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\r\n                    />\r\n                </>\r\n            </div>\r\n\r\n            {stripeCards.length > 0 ? stripeCards.map((each, idx) => (\r\n                <div key={idx}>\r\n                    <Container>\r\n                        <Row className=\"mr-6 mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name on Card:</Col>\r\n                            <Col className=\"p-3\">\r\n                                {each.name_on_card ? <span>\r\n                                    {each.name_on_card}\r\n                                </span>\r\n                                    : \"Not Set\"}\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Month:</Col>\r\n                            <Col className=\"p-3\">{each.exp_month ? each.exp_month : \"Not Set\"}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Year:</Col>\r\n                            <Col className=\"p-3\">{each.exp_year ? each.exp_year : \"Not Set\"}</Col>\r\n                        </Row>\r\n                        <Row className=\"mr-6 mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address City:</Col>\r\n                            <Col className=\"p-3\">{each.address_city ? each.address_city : \"Not Set\"}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Country:</Col>\r\n                            <Col className=\"p-3\">{each.address_country ? each.address_country : \"Not Set\"}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address State:</Col>\r\n                            <Col className=\"p-3\">{each.address_state ? each.address_state : \"Not Set\"}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Zip:</Col>\r\n                            <Col className=\"p-3\">{each.address_zip ? each.address_zip : \"Not Set\"}</Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Link to=\"/stripe-card-update/\">Update Card details</Link>\r\n                        <span className=\"ml-1 text-primary\">| </span>\r\n                        <span className=\"ml-1\"></span>\r\n\r\n                        <Link to=\"#\"\r\n                            onClick={() => {\r\n                                setDeleteCardNumber(each.card_number)\r\n                                setUserId(each.user)\r\n                                setRunCardDeleteHandler(!runCardDeleteHandler)\r\n                            }}\r\n                        >Delete Card</Link>\r\n                    </span>\r\n                </div>\r\n            )) :\r\n                <div>\r\n                    <Message variant='info'>Card details not available.</Message>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDetailsPage\r\n","import React, { useEffect } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\r\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\r\nimport Message from '../components/Message'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nfunction AccountPage() {\r\n\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // user details reducer\r\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\r\n    const { user: userAccDetails, loading } = userDetailsReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            try {\r\n                dispatch(checkTokenValidation())\r\n                dispatch(userDetails(userInfo.id))\r\n            } catch (error) {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch])\r\n\r\n    // logout\r\n    const logoutHandler = () => {\r\n        dispatch(logout()) // action\r\n    }\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n      }\r\n\r\n    const renderData = () => {\r\n        try {\r\n\r\n            return (\r\n                <div>\r\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Getting User Information</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}\r\n                    <Container>\r\n                        <Row className=\"mr-6 mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\r\n                            <Col className=\"p-3\">{userAccDetails.username}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\r\n                            <Col className=\"p-3\">{userAccDetails.email}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\r\n                            <Col className=\"p-3\">{userAccDetails.admin ? \"Yes\" : \"No\"}</Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Link to={`/account/update`}>Update Account details</Link>\r\n                        <span className=\"ml-1 text-primary\">| </span>\r\n                        <span className=\"ml-1\"></span>\r\n\r\n                        <Link to={`/account/delete/`}>Delete Account</Link>\r\n                    </span>\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return <Message variant='danger'>Something went wrong, go back to <Link\r\n                onClick={logoutHandler} to={`/login`}\r\n            > Login</Link> page.</Message>\r\n        }\r\n    }\r\n\r\n\r\n    return renderData()\r\n\r\n}\r\n\r\nexport default AccountPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\r\n\r\n\r\nfunction AccountUpdatePage() {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n  \r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // user details reducer\r\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\r\n    const { user: userAccDetails, loading } = userDetailsReducer\r\n\r\n    // user update details reducer\r\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\r\n    const { success } = userDetailsUpdateReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        }\r\n        dispatch(checkTokenValidation())\r\n        dispatch(userDetails(userInfo.id))\r\n    }, [dispatch, history, userInfo])\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n      }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\r\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords do not match\")\r\n        } else {\r\n            const userData = {\r\n                'username': updatedUsername,\r\n                'email': updatedEmail,\r\n                'password': password,\r\n            }\r\n            dispatch(userUpdateDetails(userData))\r\n        }\r\n    }\r\n\r\n    // logout\r\n    const logoutHandler = () => {\r\n        history.push(\"/login\")\r\n        dispatch(logout()) // action        \r\n    }\r\n\r\n    if(success) {\r\n        alert(\"Account successfully updated.\")\r\n        dispatch({\r\n            type: UPDATE_USER_DETAILS_RESET\r\n        })\r\n        history.push(\"/account/\")\r\n        dispatch(userDetails(userInfo.id))\r\n    }\r\n\r\n    const renderData = () => {\r\n        try {\r\n            return (\r\n                <div>\r\n                    <Row className='justify-content-md-center'>\r\n                        <Col xs={12} md={6}>\r\n                            <span\r\n                                className=\"d-flex justify-content-center\"\r\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\r\n                                <em>Update User Details</em>\r\n                            </span>\r\n                            {loading && <Spinner animation=\"border\" />}\r\n                            <Form onSubmit={onSubmit}>\r\n\r\n                                <Form.Group controlId='username'>\r\n                                    <Form.Label>\r\n                                        Username\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        autoFocus={true}\r\n                                        type=\"text\"\r\n                                        defaultValue={userAccDetails.username}\r\n                                        placeholder=\"username\"\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>\r\n                                        Email Address\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"enter email\"\r\n                                        defaultValue={userAccDetails.email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label>\r\n                                        Reset-Password\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"enter new password\"\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='confirmPassword'>\r\n                                    <Form.Label>\r\n                                        Confirm Password\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"confirm new password\"\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\r\n                                <Link to={`/account`}>\r\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\r\n                                        Cancel\r\n                                    </button>\r\n                                </Link>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return <Message variant='danger'>Something went wrong, go back to <Link\r\n                onClick={logoutHandler} to={`/login`}\r\n            > Login</Link> page.</Message>\r\n        }\r\n    }\r\n\r\n    return renderData()\r\n}\r\n\r\nexport default AccountUpdatePage\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, userAccountDelete, checkTokenValidation } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DELETE_USER_ACCOUNT_RESET } from '../constants'\r\n\r\n\r\nfunction DeleteUserAccount() {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [myPassword, setMyPassword] = useState(\"\")\r\n\r\n    \r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // delete user account reducer\r\n    const deleteUserAccountReducer = useSelector(state => state.deleteUserAccountReducer)\r\n    const { success, loading, error } = deleteUserAccountReducer\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const userData = {\r\n            \"id\": userInfo.id,\r\n            \"password\": myPassword\r\n        }\r\n        dispatch(checkTokenValidation())        \r\n        dispatch(userAccountDelete(userData))        \r\n    }\r\n    \r\n    if(success) {\r\n        alert(\"Account successfully deleted.\")\r\n        dispatch({\r\n            type: DELETE_USER_ACCOUNT_RESET\r\n        })\r\n        dispatch(logout()) // action\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    <h3>Confirm your password to delete your account.</h3>\r\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Please wait</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}                    \r\n                    {error && <Message variant='danger'>Incorrect Password!</Message>}        \r\n                    <div className=\"mt-4\">\r\n                        <Form onSubmit={onSubmit}>\r\n                            <Form.Group controlId='password'>\r\n                                <Form.Label>\r\n                                    Password\r\n                            </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"password\"\r\n                                    placeholder=\"enter your password\"\r\n                                    value={myPassword}\r\n                                    onChange={(e) => setMyPassword(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type=\"submit\" variant=\"danger\">Confirm Delete</Button>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteUserAccount\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Card, InputGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createUserAddress, getAllAddress } from '../actions/userActions'\r\nimport { CREATE_USER_ADDRESS_RESET } from '../constants'\r\nimport Message from './Message'\r\n\r\n\r\nconst CreateAddressComponent = ({ toggleCreateAddress }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [pinCode, setPinCode] = useState(\"\")\r\n    const [houseNumber, setHouseNumber] = useState(\"\")\r\n    const [landmark, setLandmark] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n\r\n    // Create User Address Reducer\r\n    const createUserAddressReducer = useSelector(state => state.createUserAddressReducer)\r\n    const { success: addressCreationSuccess, error: errorCreatingAddress } = createUserAddressReducer\r\n\r\n    const addressSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        const addressData = {\r\n            \"name\": name,\r\n            \"phone_number\": phoneNumber,\r\n            \"pin_code\": pinCode,\r\n            \"house_no\": houseNumber,\r\n            \"landmark\": landmark,\r\n            \"city\": city,\r\n            \"state\": state,\r\n        }\r\n        dispatch(createUserAddress(addressData))\r\n    }\r\n\r\n    if (addressCreationSuccess) {\r\n        alert(\"Address successfully created.\")\r\n        toggleCreateAddress()\r\n        dispatch({\r\n            type: CREATE_USER_ADDRESS_RESET\r\n        })\r\n        dispatch(getAllAddress())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"text-center text-info\"><em>New Address</em></p>\r\n            {errorCreatingAddress\r\n                ? <Message variant='danger'>\r\n                    {errorCreatingAddress}\r\n                </Message>\r\n                :\r\n                \"\"}\r\n            <Card\r\n                className=\"mx-auto mb-4\"\r\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n            >\r\n                <Card.Body>\r\n                    <Form onSubmit={addressSubmitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                autoFocus={true}\r\n                                type=\"text\"\r\n                                placeholder=\"enter your name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='phoneNumber'>\r\n                            <Form.Label>\r\n                                Phone Number\r\n                            </Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Text>+91</InputGroup.Text>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"phone number\"\r\n                                    pattern=\"[0-9]+\"\r\n                                    maxLength=\"10\"\r\n                                    value={phoneNumber}\r\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='pinCode'>\r\n                            <Form.Label>\r\n                                Pin Code\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"pin code\"\r\n                                value={pinCode}\r\n                                pattern=\"[0-9]+\"\r\n                                maxLength=\"6\"\r\n                                onChange={(e) => setPinCode(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='houseNumber'>\r\n                            <Form.Label>\r\n                                House No./Address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"house number\"\r\n                                value={houseNumber}\r\n                                onChange={(e) => setHouseNumber(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='landmark'>\r\n                            <Form.Label>\r\n                                Landmark\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"landmark\"\r\n                                value={landmark}\r\n                                onChange={(e) => setLandmark(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='city'>\r\n                            <Form.Label>\r\n                                City\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"city\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='state'>\r\n                            <Form.Label>\r\n                                State\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"state\"\r\n                                value={state}\r\n                                onChange={(e) => setState(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            className=\"btn-sm\"\r\n                            type=\"submit\"\r\n                            variant=\"success\"\r\n                        >\r\n                            Save Address\r\n                        </Button>\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            className=\"btn-sm mt-2\"\r\n                            variant=\"primary\"\r\n                            onClick={() => toggleCreateAddress()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAddressComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\r\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\r\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CreateAddressComponent from '../components/CreateAddressComponent'\r\n\r\n\r\nfunction AllAddressesOfUserPage() {\r\n\r\n    let history = useHistory()\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\r\n    const [createAddress, setCreateAddress] = useState(false)\r\n\r\n    // modal state and functions\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // get address list reducer\r\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\r\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\r\n\r\n    // get address list reducer\r\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\r\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(getAllAddress())\r\n            dispatch({\r\n                type: GET_SINGLE_ADDRESS_RESET\r\n            })\r\n        }\r\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\r\n\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    if (addressDeletionSuccess) {\r\n        alert(\"Address successfully deleted.\")\r\n        dispatch({\r\n            type: DELETE_USER_ADDRESS_RESET\r\n        })\r\n        dispatch(getAllAddress())\r\n    }\r\n\r\n    // address deletion handler\r\n    const deleteAddressHandler = (address) => {\r\n        setDeleteAddress(address)\r\n        handleShow()\r\n    }\r\n\r\n    // address delete confirmation\r\n    const confirmDelete = (id) => {\r\n        dispatch(deleteUserAddress(id))\r\n        handleClose()\r\n    }\r\n\r\n    // toggle Create Address Button\r\n    const toggleCreateAddress = () => {\r\n        setCreateAddress(!createAddress)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* Modal Start*/}\r\n            <div>\r\n                <>\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>\r\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\r\n                                {\" \"}\r\n                                Delete Confirmation\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Are you sure you want to delete this address\r\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\r\n                                Confirm Delete\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </>\r\n            </div>\r\n\r\n            {/* Modal End */}\r\n\r\n            {/* loading spinner conditions */}\r\n\r\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting addresses</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n\r\n            {/* Create Address */}\r\n            {createAddress ?\r\n                <div>\r\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\r\n                </div>\r\n                :\r\n                <button\r\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\r\n                    onClick={() => toggleCreateAddress()}\r\n                >\r\n                    Add new address +\r\n                </button>\r\n            }\r\n\r\n            {addresses && !createAddress ? addresses.map((address, idx) => (\r\n                <div key={idx}>\r\n                    <Card\r\n                        className=\"p-2 mb-2\"\r\n\r\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n                        key={address.id}\r\n\r\n                    >\r\n                        <span><b>Name: </b>{address.name}</span>\r\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\r\n                        <span><b>Address: </b>{address.house_no},\r\n                            near {address.landmark}, {address.city}, {address.state},\r\n                            {address.pin_code}\r\n\r\n                            {/* Delete Address Buttton */}\r\n\r\n                            <span\r\n                                onClick={() => deleteAddressHandler(address)}>\r\n                                <i\r\n                                    title=\"delete address\"\r\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\r\n                                ></i>\r\n                            </span>\r\n\r\n                            {/* Edit Address Buttton */}\r\n\r\n                            <span\r\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\r\n                                <i\r\n                                    title=\"edit address\"\r\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\r\n                                ></i>\r\n                            </span>\r\n\r\n                        </span>\r\n\r\n                    </Card>\r\n                </div>\r\n            ))\r\n                :\r\n                \"\"\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AllAddressesOfUserPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Card } from 'react-bootstrap'\r\nimport { checkTokenValidation, getAllAddress, getSingleAddress, logout, updateUserAddress } from '../actions/userActions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UPDATE_USER_ADDRESS_RESET } from '../constants'\r\n\r\n\r\nconst AddressUpdatePage = ({ match }) => {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [pinCode, setPinCode] = useState(\"\")\r\n    const [houseNumber, setHouseNumber] = useState(\"\")\r\n    const [landmark, setLandmark] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    // get single address reducer    \r\n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\r\n    const { address, error: errorFetchingAddress } = getSingleAddressReducer\r\n\r\n    // get single address reducer    \r\n    const updateUserAddressReducer = useSelector(state => state.updateUserAddressReducer)\r\n    const { success: addressUpdateSuccess } = updateUserAddressReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(getSingleAddress(match.params.id))\r\n        }\r\n    }, [dispatch, history, userInfo, match])\r\n\r\n    // token validation check\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    const addressSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        const updatedAddress = {\r\n            \"name\": name,\r\n            \"phone_number\": phoneNumber,\r\n            \"pin_code\": pinCode,\r\n            \"house_no\": houseNumber,\r\n            \"landmark\": landmark,\r\n            \"city\": city,\r\n            \"state\": state,\r\n        }\r\n        dispatch(updateUserAddress(match.params.id, updatedAddress))\r\n    }\r\n\r\n    if(addressUpdateSuccess) {\r\n        alert(\"Address updated successfully.\")\r\n        dispatch({\r\n            type: UPDATE_USER_ADDRESS_RESET\r\n        })\r\n        history.push(\"/all-addresses/\")\r\n        dispatch(getAllAddress())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"text-center text-info\"><em>Update Address</em></p>\r\n            {errorFetchingAddress && <h3>Invalid Address Request</h3>}\r\n            <Card\r\n                className=\"mx-auto mb-4\"\r\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\r\n            >\r\n                <Card.Body>\r\n                    <Form onSubmit={addressSubmitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                autoFocus={true}\r\n                                type=\"text\"\r\n                                placeholder=\"enter your name\"\r\n                                defaultValue={address ? address.name : \"\"}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='phoneNumber'>\r\n                            <Form.Label>\r\n                                Phone Number\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"phone number\"\r\n                                pattern=\"[0-9]+\"\r\n                                maxLength=\"10\"\r\n                                defaultValue={address ? address.phone_number : \"\"}\r\n                                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='pinCode'>\r\n                            <Form.Label>\r\n                                Pin Code\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"pin code\"\r\n                                defaultValue={address ? address.pin_code : \"\"}\r\n                                pattern=\"[0-9]+\"\r\n                                maxLength=\"6\"\r\n                                onChange={(e) => setPinCode(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='houseNumber'>\r\n                            <Form.Label>\r\n                                House No./Address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"house number\"\r\n                                defaultValue={address ? address.house_no : \"\"}\r\n                                onChange={(e) => setHouseNumber(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='landmark'>\r\n                            <Form.Label>\r\n                                Landmark\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"landmark\"\r\n                                defaultValue={address ? address.landmark : \"\"}\r\n                                onChange={(e) => setLandmark(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='city'>\r\n                            <Form.Label>\r\n                                City\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"city\"\r\n                                defaultValue={address ? address.city : \"\"}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='state'>\r\n                            <Form.Label>\r\n                                State\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"state\"\r\n                                defaultValue={address ? address.state : \"\"}\r\n                                onChange={(e) => setState(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            className=\"btn-sm\"\r\n                            type=\"submit\"\r\n                            variant=\"success\"\r\n                        >\r\n                            Save Changes\r\n                        </Button>\r\n\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            className=\"btn-sm mt-2\"\r\n                            variant=\"primary\"\r\n                            onClick={() => history.push(\"/all-addresses/\")}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n\r\n\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddressUpdatePage\r\n","export const dateCheck = (param) => {\r\n    //console.log(\"dateCheck ===>\", param)\r\n    // Example: 2021-01-12\r\n    const dateValue = param.slice(8, 10);\r\n    const monthValue = param.slice(5, 7);\r\n    const yearValue = param.slice(0, 4);\r\n  \r\n    switch (monthValue) {\r\n      case \"01\":\r\n        return `${dateValue} January ${yearValue}`;\r\n      case \"02\":\r\n        return `${dateValue} Feburary ${yearValue}`;\r\n      case \"03\":\r\n        return `${dateValue} March ${yearValue}`;\r\n      case \"04\":\r\n        return `${dateValue} April ${yearValue}`;\r\n      case \"05\":\r\n        return `${dateValue} May ${yearValue}`;\r\n      case \"06\":\r\n        return `${dateValue} June ${yearValue}`;\r\n      case \"07\":\r\n        return `${dateValue} July ${yearValue}`;\r\n      case \"08\":\r\n        return `${dateValue} August ${yearValue}`;\r\n      case \"09\":\r\n        return `${dateValue} September ${yearValue}`;\r\n      case \"10\":\r\n        return `${dateValue} October ${yearValue}`;\r\n      case \"11\":\r\n        return `${dateValue} November ${yearValue}`;\r\n      case \"12\":\r\n        return `${dateValue} December ${yearValue}`;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n","import React, { useState } from 'react'\r\n\r\nconst SearchBarForOrdersPage = ({ handleSearchTerm, placeholderValue }) => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleSearchTerm(searchTerm);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <span\r\n                    style={{ display: \"flex\" }}\r\n                    className=\"\"\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchTerm}\r\n                        placeholder={placeholderValue}\r\n                        className=\"form-control\"\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary ml-2 button-focus-css\"\r\n                    ><i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBarForOrdersPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table, Spinner } from 'react-bootstrap'\r\nimport { dateCheck } from '../components/GetDate'\r\nimport { changeDeliveryStatus } from '../actions/productActions'\r\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\r\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction OrdersListPage() {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const placeholderValue = \"Search orders by Customer Name, Address or by Ordered Item\"\r\n\r\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\r\n\r\n    const [currentDateInfo] = useState(todays_date)\r\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\r\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // get all orders reducer\r\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\r\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\r\n\r\n    // change delivery status reducer\r\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\r\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(getAllOrders())\r\n        }\r\n    }, [userInfo, dispatch, history])\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    const changeDeliveryStatusHandler = (id, status) => {\r\n        setIdOfchangeDeliveryStatus(id)\r\n        const productData = {\r\n            \"is_delivered\": status,\r\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\r\n        }\r\n        dispatch(changeDeliveryStatus(id, productData))\r\n    }\r\n\r\n    if (deliveryStatusChangeSuccess) {\r\n        alert(\"Delivery status changed successfully\")\r\n        dispatch({\r\n            type: CHANGE_DELIVERY_STATUS_RESET\r\n        })\r\n        dispatch(getAllOrders())\r\n    }\r\n\r\n    const handleSearchTerm = (term) => {\r\n        setCloneSearchTerm(term)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loadingOrders && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Orders</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\r\n                {orders.length > 0 ?\r\n                <Table className=\"mt-2\" striped bordered>\r\n                    <thead>\r\n                        <tr className=\"p-3 bg-info text-white text-center\">\r\n                            <th>Order Id</th>\r\n                            <th>Customer Name</th>\r\n                            <th>Card Used</th>\r\n                            <th>Delivery Address</th>\r\n                            <th>Ordered Item</th>\r\n                            <th>Paid Status</th>\r\n                            <th>Paid On</th>\r\n                            <th>Total Amount</th>\r\n                            <th>Delivered Status</th>\r\n                            <th>Delivered On</th>\r\n                            {userInfo.admin &&\r\n                                <th>Delivery Status</th>\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    {/* filter orders by name, address or ordered item */}\r\n\r\n                    {orders.filter((item) => (\r\n\r\n                        item.name.toLowerCase().includes(cloneSearchTerm)\r\n                        ||\r\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\r\n                        ||\r\n                        item.address.toLowerCase().includes(cloneSearchTerm)\r\n                    )\r\n\r\n                    ).map((order, idx) => (\r\n                        <tbody key={idx}>\r\n                            <tr className=\"text-center\">\r\n                                <td>\r\n                                    {order.id}\r\n                                </td>\r\n                                <td>{order.name}</td>\r\n                                <td>{order.card_number}</td>\r\n                                <td>{order.address}</td>\r\n                                <td>{order.ordered_item}</td>\r\n                                <td>{order.paid_status ?\r\n                                    <i className=\"fas fa-check-circle text-success\"></i>\r\n                                    :\r\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\r\n                                }</td>\r\n                                <td>{dateCheck(order.paid_at)}</td>\r\n                                <td>{order.total_price} INR</td>\r\n                                <td>{order.is_delivered ?\r\n                                    <i className=\"fas fa-check-circle text-success\"></i>\r\n                                    :\r\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\r\n                                }</td>\r\n                                <td>{order.delivered_at}</td>\r\n                                {userInfo.admin &&\r\n                                    <td>\r\n                                        {order.is_delivered ?\r\n                                            <button\r\n                                                className=\"btn btn-outline-danger btn-sm\"\r\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\r\n                                            >\r\n                                                {deliveryStatusChangeSpinner\r\n                                                    &&\r\n                                                    idOfchangeDeliveryStatus === order.id\r\n                                                    ?\r\n                                                    <Spinner animation=\"border\" />\r\n                                                    :\r\n                                                    \"Mark as Undelivered\"}\r\n                                            </button>\r\n                                            :\r\n                                            <button\r\n                                                className=\"btn btn-outline-primary btn-sm\"\r\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\r\n                                            >\r\n                                                {deliveryStatusChangeSpinner\r\n                                                    &&\r\n                                                    idOfchangeDeliveryStatus === order.id\r\n                                                    ?\r\n                                                    <Spinner animation=\"border\" />\r\n                                                    :\r\n                                                    \"Mark as delivered\"}\r\n                                            </button>\r\n                                        }\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </Table>\r\n                : <Message variant=\"info\">No orders yet.</Message> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersListPage","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { createProduct } from '../actions/productActions'\r\nimport { useHistory } from 'react-router'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { CREATE_PRODUCT_RESET } from '../constants'\r\nimport Message from '../components/Message';\r\n\r\n\r\nconst ProductCreatePage = () => {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [stock, setStock] = useState(false)\r\n    const [image, setImage] = useState(null)\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // create product reducer\r\n    const createProductReducer = useSelector(state => state.createProductReducer)\r\n    const { product, success: productCreationSuccess, error: productCreationError } = createProductReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        }\r\n        dispatch(checkTokenValidation())\r\n    }, [dispatch, userInfo, history])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let form_data = new FormData()\r\n        form_data.append('name', name)\r\n        form_data.append('description', description)\r\n        form_data.append('price', price)\r\n        form_data.append('stock', stock)\r\n        form_data.append('image', image)\r\n\r\n        dispatch(createProduct(form_data))\r\n    }\r\n\r\n    if (productCreationSuccess) {\r\n        alert(\"Product successfully created.\")\r\n        history.push(`/product/${product.id}/`)\r\n        dispatch({\r\n            type: CREATE_PRODUCT_RESET\r\n        })\r\n    }\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {productCreationError && <Message variant='danger'>{productCreationError.image[0]}</Message>}\r\n            <span\r\n                className=\"d-flex justify-content-center text-info\"\r\n                >\r\n                <em>New Product</em>\r\n            </span>\r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Name\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        autoFocus={true}\r\n                        type=\"text\"\r\n                        value={name}\r\n                        placeholder=\"product name\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Description\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={description}\r\n                        placeholder=\"product description\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Price\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\r\n                        value={price}\r\n                        placeholder=\"199.99\"\r\n                        step=\"0.01\"\r\n                        maxLength=\"8\"\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <span style={{ display: \"flex\" }}>\r\n                    <label>In Stock</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        value={stock}\r\n                        className=\"ml-2 mt-2\"\r\n                        onChange={() => setStock(!stock)}\r\n                    />\r\n                </span>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"file\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant='success'\r\n                    className=\"btn-sm button-focus-css\"\r\n                >\r\n                    Save Product\r\n                </Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant='primary'\r\n                    className=\"btn-sm ml-2 button-focus-css\"\r\n                    onClick={() => history.push(\"/\")}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCreatePage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { getProductDetails, updateProduct } from '../actions/productActions'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../constants'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst ProductUpdatePage = ({ match }) => {\r\n\r\n    // product details reducer\r\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\r\n    const { loading: loadingPageDetails, product } = productDetailsReducer\r\n\r\n    // as our errors will be displayed at the top of the webpage\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [stock, setStock] = useState(product.stock)\r\n    const [image, setImage] = useState(\"\")\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [newImage, setNewImage] = useState(false)\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // product details reducer\r\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\r\n    const {\r\n        success: productUpdationSuccess,\r\n        loading: loadingProductUpdations,\r\n        error: productUpdationError\r\n    } = updateProductReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n    \r\n    // get product details\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.admin) {\r\n            history.push(\"/login\")\r\n        }\r\n        dispatch(checkTokenValidation())\r\n        dispatch(getProductDetails(match.params.id))\r\n    }, [dispatch, userInfo, history, match])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const productId = product.id\r\n        let form_data = new FormData()\r\n        form_data.append('name', name)\r\n        form_data.append('description', description)\r\n        form_data.append('price', price)\r\n        form_data.append('stock', stock)\r\n        form_data.append('image', image)\r\n\r\n        dispatch(updateProduct(productId, form_data))\r\n    }\r\n\r\n    if (productUpdationSuccess) {\r\n        alert(\"Product successfully updated.\")\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_RESET\r\n        })\r\n        history.push(`/product/${product.id}`)\r\n    }\r\n\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span\r\n                className=\"d-flex justify-content-center text-info\"\r\n            >\r\n                <em>Edit Product</em>\r\n            </span>\r\n            {productUpdationError ? (\r\n                <div>\r\n                    {scrollToTop()}\r\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\r\n                </div>\r\n            ) : \"\"}\r\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Product Details</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\r\n                <h5>Updating Product</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span> : \"\"}\r\n            <Form onSubmit={onSubmit}>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage(!newImage)\r\n                                    setImage(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage(!newImage)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Name\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        autoFocus={true}\r\n                        type=\"text\"\r\n                        defaultValue={product.name}\r\n                        placeholder=\"product name\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Description\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        defaultValue={product.description}\r\n                        placeholder=\"product description\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Price\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\r\n                        defaultValue={product.price}\r\n                        placeholder=\"199.99\"\r\n                        step=\"0.01\"\r\n                        maxLength=\"8\"\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <span style={{ display: \"flex\" }}>\r\n                    <label>In Stock</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        defaultChecked={product.stock}\r\n                        className=\"ml-2 mt-2\"\r\n                        onChange={() => setStock(!stock)}\r\n                    />\r\n                </span>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant='success'\r\n                    className=\"btn-sm button-focus-css mb-4\"\r\n                >\r\n                    Save Changes\r\n                </Button>\r\n                <Button\r\n                    onClick={() => history.push(`/product/${product.id}`)}\r\n                    variant='primary'\r\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdatePage\r\n","import React from 'react'\r\nimport Message from '../components/Message'\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <Message variant='danger'>\r\n                404 Not Found\r\n            </Message>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport ProductListPage from './pages/ProductsListPage'\r\nimport ProductDetailsPage from './pages/ProductDetailsPage'\r\nimport CheckoutPage from './pages/CheckoutPage'\r\nimport NavBar from './components/Navbar'\r\nimport PaymentStatus from './components/PaymentStatus'\r\nimport Login from './pages/LoginPage'\r\nimport Register from './pages/RegisterPage'\r\nimport CardUpdatePage from './pages/CardUpdatePage'\r\nimport CardDetailsPage from './pages/CardDetailsPage'\r\nimport AccountPage from './pages/AccountPage'\r\nimport AccountUpdatePage from './pages/AccountUpdatePage'\r\nimport DeleteUserAccountPage from './pages/DeleteUserAccountPage'\r\nimport AllAddressesOfUserPage from './pages/AllAddressesOfUserPage'\r\nimport AddressUpdatePage from './pages/AddressUpdatePage'\r\nimport OrdersListPage from './pages/OrdersListPage'\r\nimport ProductCreatePage from './pages/ProductCreatePage'\r\nimport ProductUpdatePage from './pages/ProductUpdatePage'\r\nimport NotFound from './pages/NotFoundPage'\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <NavBar />\r\n        <div className=\"container mt-4\">\r\n          <Switch>\r\n            <Route path=\"/\" component={ProductListPage} exact />\r\n            <Route path=\"/new-product/\" component={ProductCreatePage} exact />\r\n            <Route path=\"/product/:id/\" component={ProductDetailsPage} exact />\r\n            <Route path=\"/product-update/:id/\" component={ProductUpdatePage} exact />\r\n            <Route path=\"/product/:id/checkout/\" component={CheckoutPage} exact />\r\n            <Route path=\"/payment-status\" component={PaymentStatus} exact />\r\n            <Route path=\"/login\" component={Login} exact />\r\n            <Route path=\"/register\" component={Register} exact />\r\n            <Route path=\"/account\" component={AccountPage} exact />\r\n            <Route path=\"/account/update/\" component={AccountUpdatePage} exact />\r\n            <Route path=\"/account/delete/\" component={DeleteUserAccountPage} exact />\r\n            <Route path=\"/stripe-card-details\" component={CardDetailsPage} exact />\r\n            <Route path=\"/stripe-card-update\" component={CardUpdatePage} exact />\r\n            <Route path=\"/all-addresses/\" component={AllAddressesOfUserPage} exact />\r\n            <Route path=\"/all-addresses/:id/\" component={AddressUpdatePage} exact />\r\n            <Route path=\"/all-orders/\" component={OrdersListPage} exact />\r\n            <Route path=\"\" component={NotFound} exact />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default App\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './App';\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}